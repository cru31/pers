{
    "metadata": {
        "timestamp": "2025-09-03 04:10:57",
        "total_tests": 24,
        "passed": 9,
        "failed": 15,
        "skipped": 0,
        "pass_rate": 37.5,
        "total_time_ms": 1093.4735999999998
    },
    "results": [
        {
            "id": "001",
            "category": "Critical Path",
            "test_type": "WebGPU Instance Creation",
            "input": "type=InstanceDesc, enableValidation=true, applicationName=Unit Test, engineName=Pers Graphics Engine",
            "expected_result": "Valid instance created",
            "actual_result": "Valid instance created",
            "expected_callstack": [
                "WebGPUBackendFactory::createInstance()",
                "WebGPUInstance::WebGPUInstance()",
                "wgpuCreateInstance()"
            ],
            "actual_callstack": [],
            "passed": true,
            "failure_reason": "",
            "execution_time_ms": 208.6017,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": [
                "[INFO] WebGPUBackendFactory: Creating WebGPU instance... (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBackendFactory.cpp:10)",
                "[INFO] WebGPUInstance: Initializing for: Unit Test (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:35)",
                "[INFO] WebGPUInstance: Engine: Pers Graphics Engine v1 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:37)",
                "[INFO] WebGPUInstance: Using primary hardware backends only (Vulkan, Metal, DX12, BrowserWebGPU) (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:58)",
                "[INFO] WebGPUInstance: Validation enabled (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:67)",
                "[INFO] WebGPUInstance: Debug mode enabled for detailed validation messages (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:72)",
                "[INFO] WebGPUInstance: Using DXC shader compiler for DX12 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:79)",
                "[INFO] WebGPUInstance: Created successfully with configured settings (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:105)"
            ]
        },
        {
            "id": "002",
            "category": "Critical Path",
            "test_type": "Adapter Request",
            "input": "type=PhysicalDeviceOptions, powerPreference=HighPerformance, compatibleSurface=null",
            "expected_result": "At least 1 adapter found",
            "actual_result": "At least 1 adapter found",
            "expected_callstack": [
                "IInstance::requestPhysicalDevice()",
                "wgpuInstanceRequestAdapter()"
            ],
            "actual_callstack": [],
            "passed": true,
            "failure_reason": "",
            "execution_time_ms": 112.0527,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": [
                "[INFO] WebGPUBackendFactory: Creating WebGPU instance... (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBackendFactory.cpp:10)",
                "[INFO] WebGPUInstance: Initializing for: Pers Application (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:35)",
                "[INFO] WebGPUInstance: Engine: Pers Graphics Engine v1 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:37)",
                "[INFO] WebGPUInstance: Using primary hardware backends only (Vulkan, Metal, DX12, BrowserWebGPU) (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:58)",
                "[INFO] WebGPUInstance: Validation enabled (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:67)",
                "[INFO] WebGPUInstance: Debug mode enabled for detailed validation messages (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:72)",
                "[INFO] WebGPUInstance: Using DXC shader compiler for DX12 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:79)",
                "[INFO] WebGPUInstance: Created successfully with configured settings (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:105)",
                "[INFO] WebGPUInstance: Adapter obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:173)",
                "[INFO] WebGPUInstance: Adapter device: NVIDIA GeForce RTX 3090 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:254)",
                "[INFO] WebGPUInstance: Adapter description: 560.94 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:262)",
                "[INFO] WebGPUPhysicalDevice: Adapter info queried successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:114)",
                "[INFO] WebGPUPhysicalDevice: Created with adapter (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:90)",
                "[INFO] WebGPUInstance: Physical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:289)"
            ]
        },
        {
            "id": "003",
            "category": "Critical Path",
            "test_type": "Device Creation",
            "input": "type=DeviceDesc, label=Test Device, requiredFeatures=[], requiredLimits=null",
            "expected_result": "Valid device created",
            "actual_result": "Valid device created",
            "expected_callstack": [
                "IPhysicalDevice::createLogicalDevice()",
                "wgpuAdapterRequestDevice()"
            ],
            "actual_callstack": [],
            "passed": true,
            "failure_reason": "",
            "execution_time_ms": 172.2869,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": [
                "[INFO] WebGPUBackendFactory: Creating WebGPU instance... (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBackendFactory.cpp:10)",
                "[INFO] WebGPUInstance: Initializing for: Pers Application (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:35)",
                "[INFO] WebGPUInstance: Engine: Pers Graphics Engine v1 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:37)",
                "[INFO] WebGPUInstance: Using primary hardware backends only (Vulkan, Metal, DX12, BrowserWebGPU) (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:58)",
                "[INFO] WebGPUInstance: Validation enabled (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:67)",
                "[INFO] WebGPUInstance: Debug mode enabled for detailed validation messages (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:72)",
                "[INFO] WebGPUInstance: Using DXC shader compiler for DX12 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:79)",
                "[INFO] WebGPUInstance: Created successfully with configured settings (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:105)",
                "[INFO] WebGPUInstance: Adapter obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:173)",
                "[INFO] WebGPUInstance: Adapter device: NVIDIA GeForce RTX 3090€Mç—… (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:254)",
                "[INFO] WebGPUInstance: Adapter description: 560.94 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:262)",
                "[INFO] WebGPUPhysicalDevice: Adapter info queried successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:114)",
                "[INFO] WebGPUPhysicalDevice: Created with adapter (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:90)",
                "[INFO] WebGPUInstance: Physical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:289)",
                "[INFO] WebGPUPhysicalDevice: Using adapter's default limits (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:361)",
                "[INFO] WebGPUPhysicalDevice: Device obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:444)",
                "[INFO] WebGPULogicalDevice: Created with device (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:18)",
                "[INFO] WebGPUQueue: Created with queue (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUQueue.cpp:20)",
                "[INFO] WebGPULogicalDevice: Default queue created (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:58)",
                "[INFO] WebGPUPhysicalDevice: Logical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:504)"
            ]
        },
        {
            "id": "004",
            "category": "Critical Path",
            "test_type": "Queue Creation",
            "input": "type=None",
            "expected_result": "Valid queue created",
            "actual_result": "Valid queue created",
            "expected_callstack": [
                "WebGPULogicalDevice::createDefaultQueue()",
                "wgpuDeviceGetQueue()"
            ],
            "actual_callstack": [],
            "passed": true,
            "failure_reason": "",
            "execution_time_ms": 105.4969,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": [
                "[INFO] WebGPUBackendFactory: Creating WebGPU instance... (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBackendFactory.cpp:10)",
                "[INFO] WebGPUInstance: Initializing for: Pers Application (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:35)",
                "[INFO] WebGPUInstance: Engine: Pers Graphics Engine v1 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:37)",
                "[INFO] WebGPUInstance: Using primary hardware backends only (Vulkan, Metal, DX12, BrowserWebGPU) (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:58)",
                "[INFO] WebGPUInstance: Validation enabled (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:67)",
                "[INFO] WebGPUInstance: Debug mode enabled for detailed validation messages (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:72)",
                "[INFO] WebGPUInstance: Using DXC shader compiler for DX12 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:79)",
                "[INFO] WebGPUInstance: Created successfully with configured settings (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:105)",
                "[INFO] WebGPUInstance: Adapter obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:173)",
                "[INFO] WebGPUInstance: Adapter device: NVIDIA GeForce RTX 3090 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:254)",
                "[INFO] WebGPUInstance: Adapter description: 560.94 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:262)",
                "[INFO] WebGPUPhysicalDevice: Adapter info queried successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:114)",
                "[INFO] WebGPUPhysicalDevice: Created with adapter (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:90)",
                "[INFO] WebGPUInstance: Physical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:289)",
                "[INFO] WebGPUPhysicalDevice: Using adapter's default limits (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:361)",
                "[INFO] WebGPUPhysicalDevice: Device obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:444)",
                "[INFO] WebGPULogicalDevice: Created with device (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:18)",
                "[INFO] WebGPUQueue: Created with queue (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUQueue.cpp:20)",
                "[INFO] WebGPULogicalDevice: Default queue created (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:58)",
                "[INFO] WebGPUPhysicalDevice: Logical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:504)"
            ]
        },
        {
            "id": "005",
            "category": "Critical Path",
            "test_type": "Command Encoder Creation",
            "input": "type=None",
            "expected_result": "Valid encoder created",
            "actual_result": "Valid encoder created",
            "expected_callstack": [
                "WebGPULogicalDevice::createCommandEncoder()",
                "wgpuDeviceCreateCommandEncoder()"
            ],
            "actual_callstack": [],
            "passed": true,
            "failure_reason": "",
            "execution_time_ms": 90.726,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": [
                "[INFO] WebGPUBackendFactory: Creating WebGPU instance... (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBackendFactory.cpp:10)",
                "[INFO] WebGPUInstance: Initializing for: Pers Application (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:35)",
                "[INFO] WebGPUInstance: Engine: Pers Graphics Engine v1 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:37)",
                "[INFO] WebGPUInstance: Using primary hardware backends only (Vulkan, Metal, DX12, BrowserWebGPU) (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:58)",
                "[INFO] WebGPUInstance: Validation enabled (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:67)",
                "[INFO] WebGPUInstance: Debug mode enabled for detailed validation messages (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:72)",
                "[INFO] WebGPUInstance: Using DXC shader compiler for DX12 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:79)",
                "[INFO] WebGPUInstance: Created successfully with configured settings (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:105)",
                "[INFO] WebGPUInstance: Adapter obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:173)",
                "[INFO] WebGPUInstance: Adapter device: NVIDIA GeForce RTX 3090 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:254)",
                "[INFO] WebGPUInstance: Adapter description: 560.94 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:262)",
                "[INFO] WebGPUPhysicalDevice: Adapter info queried successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:114)",
                "[INFO] WebGPUPhysicalDevice: Created with adapter (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:90)",
                "[INFO] WebGPUInstance: Physical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:289)",
                "[INFO] WebGPUPhysicalDevice: Using adapter's default limits (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:361)",
                "[INFO] WebGPUPhysicalDevice: Device obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:444)",
                "[INFO] WebGPULogicalDevice: Created with device (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:18)",
                "[INFO] WebGPUQueue: Created with queue (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUQueue.cpp:20)",
                "[INFO] WebGPULogicalDevice: Default queue created (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:58)",
                "[INFO] WebGPUPhysicalDevice: Logical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:504)"
            ]
        },
        {
            "id": "006",
            "category": "Memory Safety",
            "test_type": "Buffer Double Delete",
            "input": "type=BufferDesc, size=1024, usage=Vertex",
            "expected_result": "No crash, handled gracefully",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "WebGPUBuffer::~WebGPUBuffer()",
                "wgpuBufferRelease()"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.2813,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "007",
            "category": "Memory Safety",
            "test_type": "Null Buffer Access",
            "input": "type=nullptr",
            "expected_result": "Returns error, no crash",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "WebGPUBuffer::map()",
                "early return"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.2074,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "008",
            "category": "Memory Safety",
            "test_type": "Buffer Overflow Write",
            "input": "type=BufferWrite, buffer_size=512, write_size=1024",
            "expected_result": "Error returned",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "WebGPUQueue::writeBuffer()",
                "validation check"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.1796,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "009",
            "category": "Memory Safety",
            "test_type": "Unmapped Buffer Access",
            "input": "type=BufferDesc, size=1024, usage=Vertex, mappedAtCreation=false",
            "expected_result": "Returns nullptr",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "WebGPUBuffer::map()",
                "check _mappedData"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.2549,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "010",
            "category": "Memory Safety",
            "test_type": "Reference Count Test",
            "input": "type=LoopCount, iterations=1000",
            "expected_result": "No leaks",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "wgpuDeviceAddRef()",
                "wgpuDeviceRelease()"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.4693,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "011",
            "category": "Type Conversion",
            "test_type": "ColorWriteMask::All",
            "input": "type=Enum, enum_type=ColorWriteMask, value=All",
            "expected_result": "WGPUColorWriteMask_All",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "convertColorWriteMask()",
                "return WGPUColorWriteMask_All"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.2125,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "012",
            "category": "Type Conversion",
            "test_type": "ColorWriteMask::Red",
            "input": "type=Enum, enum_type=ColorWriteMask, value=Red",
            "expected_result": "WGPUColorWriteMask_Red",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "convertColorWriteMask()",
                "check Red flag"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.2007,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "013",
            "category": "Type Conversion",
            "test_type": "BufferUsage::Vertex",
            "input": "type=Enum, enum_type=BufferUsage, value=Vertex",
            "expected_result": "WGPUBufferUsage_Vertex",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "convertBufferUsage()",
                "check Vertex flag"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.262,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "014",
            "category": "Type Conversion",
            "test_type": "BufferUsage Multiple Flags",
            "input": "type=EnumFlags, enum_type=BufferUsage, flags=[\"Vertex\",\"Index\",\"Uniform\"]",
            "expected_result": "Correct OR'd flags",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "convertBufferUsage()",
                "OR multiple flags"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.1951,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "015",
            "category": "Type Conversion",
            "test_type": "TextureFormat::BGRA8Unorm",
            "input": "type=Enum, enum_type=TextureFormat, value=BGRA8Unorm",
            "expected_result": "WGPUTextureFormat_BGRA8Unorm",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "convertTextureFormat()"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.2047,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "016",
            "category": "Resource Management",
            "test_type": "Buffer Creation 64KB",
            "input": "type=BufferDesc, size=65536, usage=Storage, debugName=Test Buffer 64KB",
            "expected_result": "Valid buffer",
            "actual_result": "Valid buffer",
            "expected_callstack": [
                "WebGPUResourceFactory::createBuffer()",
                "wgpuDeviceCreateBuffer()"
            ],
            "actual_callstack": [],
            "passed": true,
            "failure_reason": "",
            "execution_time_ms": 95.7409,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": [
                "[INFO] WebGPUBackendFactory: Creating WebGPU instance... (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBackendFactory.cpp:10)",
                "[INFO] WebGPUInstance: Initializing for: Pers Application (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:35)",
                "[INFO] WebGPUInstance: Engine: Pers Graphics Engine v1 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:37)",
                "[INFO] WebGPUInstance: Using primary hardware backends only (Vulkan, Metal, DX12, BrowserWebGPU) (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:58)",
                "[INFO] WebGPUInstance: Validation enabled (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:67)",
                "[INFO] WebGPUInstance: Debug mode enabled for detailed validation messages (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:72)",
                "[INFO] WebGPUInstance: Using DXC shader compiler for DX12 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:79)",
                "[INFO] WebGPUInstance: Created successfully with configured settings (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:105)",
                "[INFO] WebGPUInstance: Adapter obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:173)",
                "[INFO] WebGPUInstance: Adapter device: NVIDIA GeForce RTX 3090€ßþ¯… (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:254)",
                "[INFO] WebGPUInstance: Adapter description: 560.94 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:262)",
                "[INFO] WebGPUPhysicalDevice: Adapter info queried successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:114)",
                "[INFO] WebGPUPhysicalDevice: Created with adapter (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:90)",
                "[INFO] WebGPUInstance: Physical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:289)",
                "[INFO] WebGPUPhysicalDevice: Using adapter's default limits (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:361)",
                "[INFO] WebGPUPhysicalDevice: Device obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:444)",
                "[INFO] WebGPULogicalDevice: Created with device (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:18)",
                "[INFO] WebGPUQueue: Created with queue (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUQueue.cpp:20)",
                "[INFO] WebGPULogicalDevice: Default queue created (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:58)",
                "[INFO] WebGPUPhysicalDevice: Logical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:504)",
                "[INFO] WebGPUResourceFactory: Created resource factory (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUResourceFactory.cpp:16)",
                "[DEBUG] WebGPULogicalDevice: Created and cached resource factory (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:81)",
                "[DEBUG] WebGPUBuffer: Created buffer 'Test Buffer 64KB' of size 65536 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBuffer.cpp:76)"
            ]
        },
        {
            "id": "017",
            "category": "Resource Management",
            "test_type": "Buffer Creation 0 Size",
            "input": "type=BufferDesc, size=0, usage=Vertex",
            "expected_result": "Returns nullptr",
            "actual_result": "Returns nullptr",
            "expected_callstack": [
                "WebGPUBuffer::WebGPUBuffer()",
                "early return"
            ],
            "actual_callstack": [],
            "passed": true,
            "failure_reason": "",
            "execution_time_ms": 106.5065,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": [
                "[INFO] WebGPUBackendFactory: Creating WebGPU instance... (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBackendFactory.cpp:10)",
                "[INFO] WebGPUInstance: Initializing for: Pers Application (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:35)",
                "[INFO] WebGPUInstance: Engine: Pers Graphics Engine v1 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:37)",
                "[INFO] WebGPUInstance: Using primary hardware backends only (Vulkan, Metal, DX12, BrowserWebGPU) (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:58)",
                "[INFO] WebGPUInstance: Validation enabled (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:67)",
                "[INFO] WebGPUInstance: Debug mode enabled for detailed validation messages (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:72)",
                "[INFO] WebGPUInstance: Using DXC shader compiler for DX12 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:79)",
                "[INFO] WebGPUInstance: Created successfully with configured settings (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:105)",
                "[INFO] WebGPUInstance: Adapter obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:173)",
                "[INFO] WebGPUInstance: Adapter device: NVIDIA GeForce RTX 3090 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:254)",
                "[INFO] WebGPUInstance: Adapter description: 560.94 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:262)",
                "[INFO] WebGPUPhysicalDevice: Adapter info queried successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:114)",
                "[INFO] WebGPUPhysicalDevice: Created with adapter (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:90)",
                "[INFO] WebGPUInstance: Physical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:289)",
                "[INFO] WebGPUPhysicalDevice: Using adapter's default limits (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:361)",
                "[INFO] WebGPUPhysicalDevice: Device obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:444)",
                "[INFO] WebGPULogicalDevice: Created with device (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:18)",
                "[INFO] WebGPUQueue: Created with queue (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUQueue.cpp:20)",
                "[INFO] WebGPULogicalDevice: Default queue created (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:58)",
                "[INFO] WebGPUPhysicalDevice: Logical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:504)",
                "[INFO] WebGPUResourceFactory: Created resource factory (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUResourceFactory.cpp:16)",
                "[DEBUG] WebGPULogicalDevice: Created and cached resource factory (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:81)",
                "[WARNING] WebGPUResourceFactory: Cannot create buffer with size 0 - WebGPU requires size > 0 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUResourceFactory.cpp:36)"
            ]
        },
        {
            "id": "018",
            "category": "Resource Management",
            "test_type": "Shader Module Creation",
            "input": "type=ShaderModuleDesc, code=@vertex\nfn main(@builtin(vertex_index) idx: u32) -> @builtin(position) vec4<f32> {\n    return vec4<f32>(0.0, 0.0, 0.0, 1.0);\n}, debugName=Test Vertex Shader, entryPoint=main",
            "expected_result": "Valid shader",
            "actual_result": "Valid shader",
            "expected_callstack": [
                "WebGPUShaderModule::createShaderModule()",
                "wgpuDeviceCreateShaderModule()"
            ],
            "actual_callstack": [],
            "passed": true,
            "failure_reason": "",
            "execution_time_ms": 104.084,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": [
                "[INFO] WebGPUBackendFactory: Creating WebGPU instance... (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBackendFactory.cpp:10)",
                "[INFO] WebGPUInstance: Initializing for: Pers Application (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:35)",
                "[INFO] WebGPUInstance: Engine: Pers Graphics Engine v1 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:37)",
                "[INFO] WebGPUInstance: Using primary hardware backends only (Vulkan, Metal, DX12, BrowserWebGPU) (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:58)",
                "[INFO] WebGPUInstance: Validation enabled (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:67)",
                "[INFO] WebGPUInstance: Debug mode enabled for detailed validation messages (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:72)",
                "[INFO] WebGPUInstance: Using DXC shader compiler for DX12 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:79)",
                "[INFO] WebGPUInstance: Created successfully with configured settings (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:105)",
                "[INFO] WebGPUInstance: Adapter obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:173)",
                "[INFO] WebGPUInstance: Adapter device: NVIDIA GeForce RTX 3090 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:254)",
                "[INFO] WebGPUInstance: Adapter description: 560.94 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:262)",
                "[INFO] WebGPUPhysicalDevice: Adapter info queried successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:114)",
                "[INFO] WebGPUPhysicalDevice: Created with adapter (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:90)",
                "[INFO] WebGPUInstance: Physical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:289)",
                "[INFO] WebGPUPhysicalDevice: Using adapter's default limits (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:361)",
                "[INFO] WebGPUPhysicalDevice: Device obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:444)",
                "[INFO] WebGPULogicalDevice: Created with device (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:18)",
                "[INFO] WebGPUQueue: Created with queue (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUQueue.cpp:20)",
                "[INFO] WebGPULogicalDevice: Default queue created (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:58)",
                "[INFO] WebGPUPhysicalDevice: Logical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:504)",
                "[INFO] WebGPUResourceFactory: Created resource factory (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUResourceFactory.cpp:16)",
                "[DEBUG] WebGPULogicalDevice: Created and cached resource factory (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:81)",
                "[INFO] WebGPUShaderModule: Created shader module: Test Vertex Shader (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUShaderModule.cpp:104)"
            ]
        },
        {
            "id": "019",
            "category": "Resource Management",
            "test_type": "Invalid Shader Code",
            "input": "type=ShaderModuleDesc, code=invalid wgsl code @#$%, debugName=Invalid Shader",
            "expected_result": "Returns error",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "WebGPUShaderModule::createShaderModule()",
                "validation error"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.2545,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "021",
            "category": "Error Handling",
            "test_type": "Null Device Operations",
            "input": "type=nullptr",
            "expected_result": "Returns error",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "WebGPULogicalDevice methods",
                "null check"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.2158,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "022",
            "category": "Error Handling",
            "test_type": "Invalid Surface",
            "input": "type=NativeSurfaceHandle, handle=null",
            "expected_result": "SwapChain creation fails",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "WebGPULogicalDevice::createSwapChain()",
                "surface validation"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.2262,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "023",
            "category": "Error Handling",
            "test_type": "Queue Submit Empty",
            "input": "type=CommandBufferList, buffers=[]",
            "expected_result": "Returns success",
            "actual_result": "Returns success",
            "expected_callstack": [
                "WebGPUQueue::submit()",
                "empty check"
            ],
            "actual_callstack": [],
            "passed": true,
            "failure_reason": "",
            "execution_time_ms": 94.4724,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": [
                "[INFO] WebGPUBackendFactory: Creating WebGPU instance... (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUBackendFactory.cpp:10)",
                "[INFO] WebGPUInstance: Initializing for: Pers Application (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:35)",
                "[INFO] WebGPUInstance: Engine: Pers Graphics Engine v1 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:37)",
                "[INFO] WebGPUInstance: Using primary hardware backends only (Vulkan, Metal, DX12, BrowserWebGPU) (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:58)",
                "[INFO] WebGPUInstance: Validation enabled (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:67)",
                "[INFO] WebGPUInstance: Debug mode enabled for detailed validation messages (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:72)",
                "[INFO] WebGPUInstance: Using DXC shader compiler for DX12 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:79)",
                "[INFO] WebGPUInstance: Created successfully with configured settings (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:105)",
                "[INFO] WebGPUInstance: Adapter obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:173)",
                "[INFO] WebGPUInstance: Adapter device: NVIDIA GeForce RTX 3090€à\foúiË (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:254)",
                "[INFO] WebGPUInstance: Adapter description: 560.94 (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:262)",
                "[INFO] WebGPUPhysicalDevice: Adapter info queried successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:114)",
                "[INFO] WebGPUPhysicalDevice: Created with adapter (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:90)",
                "[INFO] WebGPUInstance: Physical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUInstance.cpp:289)",
                "[INFO] WebGPUPhysicalDevice: Using adapter's default limits (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:361)",
                "[INFO] WebGPUPhysicalDevice: Device obtained successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:444)",
                "[INFO] WebGPULogicalDevice: Created with device (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:18)",
                "[INFO] WebGPUQueue: Created with queue (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUQueue.cpp:20)",
                "[INFO] WebGPULogicalDevice: Default queue created (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPULogicalDevice.cpp:58)",
                "[INFO] WebGPUPhysicalDevice: Logical device created successfully (D:\\cru31.dev\\pers_work\\pers_repo\\pers\\src\\graphics\\backends\\webgpu\\WebGPUPhysicalDevice.cpp:504)"
            ]
        },
        {
            "id": "024",
            "category": "Error Handling",
            "test_type": "RenderPass Without Begin",
            "input": "type=None",
            "expected_result": "Error logged",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "WebGPURenderPassEncoder::end()",
                "check _ended flag"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.1741,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        },
        {
            "id": "025",
            "category": "Error Handling",
            "test_type": "Double RenderPass End",
            "input": "type=None",
            "expected_result": "Warning logged",
            "actual_result": "N/A - Not a test target",
            "expected_callstack": [
                "WebGPURenderPassEncoder::end()",
                "check _ended flag"
            ],
            "actual_callstack": [],
            "passed": false,
            "failure_reason": "No handler implemented (feature not in Pers or not testable yet)",
            "execution_time_ms": 0.1675,
            "timestamp": "2025-09-03 04:10:57",
            "log_messages": []
        }
    ]
}