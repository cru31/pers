{
  "fileType": "test_cases",
  "fileId": "tc500",
  "metadata": {
    "version": "3.0.0",
    "date": "2025-01-03",
    "total_tests": 500,
    "categories": [
      "Instance Management",
      "Physical Device",
      "Logical Device",
      "Queue Operations",
      "Command Encoding",
      "Buffer Management",
      "Texture Management",
      "Shader Compilation",
      "Pipeline Creation",
      "RenderPass Operations",
      "Compute Operations",
      "Synchronization",
      "SwapChain Management",
      "Resource Binding",
      "Memory Management",
      "Error Recovery",
      "Performance",
      "Validation",
      "Compatibility",
      "Stress Testing"
    ]
  },
  "test_cases": [
    {
      "id": "INST_001",
      "category": "Instance Management",
      "test_type": "Instance Creation - Validation Enabled",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "Test App",
          "engineName": "Pers Graphics Engine"
        }
      },
      "expected_result": "Valid instance created with validation",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_002",
      "category": "Instance Management",
      "test_type": "Instance Creation - Validation Disabled",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": false,
          "applicationName": "Performance Test",
          "engineName": "Pers Graphics Engine"
        }
      },
      "expected_result": "Valid instance created without validation",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_003",
      "category": "Instance Management",
      "test_type": "Instance Creation - Empty Application Name",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "",
          "engineName": "Pers Graphics Engine"
        }
      },
      "expected_result": "Valid instance created with default name",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_004",
      "category": "Instance Management",
      "test_type": "Instance Creation - Very Long Application Name",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "ThisIsAnExtremelyLongApplicationNameThatExceedsNormalLimitsAndShouldBeHandledProperlyByTheSystemWithoutCausingBufferOverflowsOrOtherIssues_1234567890_ABCDEFGHIJKLMNOPQRSTUVWXYZ",
          "engineName": "Pers"
        }
      },
      "expected_result": "Valid instance with truncated name",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_005",
      "category": "Instance Management",
      "test_type": "Instance Creation - Special Characters in Name",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "Test@#$%^&*()_+-=[]{}|;':\",./<>?",
          "engineName": "Pers"
        }
      },
      "expected_result": "Valid instance with sanitized name",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_006",
      "category": "Instance Management",
      "test_type": "Instance Creation - Unicode Name",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "测试应用程序 テストアプリ 테스트 앱",
          "engineName": "Pers"
        }
      },
      "expected_result": "Valid instance with unicode name",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_007",
      "category": "Instance Management",
      "test_type": "Instance Creation - Null Engine Name",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "Test",
          "engineName": ""
        }
      },
      "expected_result": "Valid instance with default engine name",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_008",
      "category": "Instance Management",
      "test_type": "Instance Creation - Debug Build",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "Debug Test",
          "engineName": "Pers",
          "enableDebugLayers": true
        }
      },
      "expected_result": "Valid instance with debug layers",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_009",
      "category": "Instance Management",
      "test_type": "Instance Creation - Release Build",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": false,
          "applicationName": "Release Test",
          "engineName": "Pers",
          "enableDebugLayers": false
        }
      },
      "expected_result": "Valid instance optimized for release",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_010",
      "category": "Instance Management",
      "test_type": "Instance Double Creation",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "Double Instance",
          "engineName": "Pers"
        }
      },
      "expected_result": "Second instance creation handled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "PHYS_001",
      "category": "Physical Device",
      "test_type": "Request Physical Device - High Performance",
      "input": {
        "type": "PhysicalDeviceOptions",
        "values": {
          "powerPreference": "HighPerformance",
          "compatibleSurface": null,
          "forceFallbackAdapter": false
        }
      },
      "expected_result": "High performance adapter selected",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PHYS_002",
      "category": "Physical Device",
      "test_type": "Request Physical Device - Low Power",
      "input": {
        "type": "PhysicalDeviceOptions",
        "values": {
          "powerPreference": "LowPower",
          "compatibleSurface": null,
          "forceFallbackAdapter": false
        }
      },
      "expected_result": "Low power adapter selected",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PHYS_003",
      "category": "Physical Device",
      "test_type": "Request Physical Device - Default",
      "input": {
        "type": "PhysicalDeviceOptions",
        "values": {
          "powerPreference": "Default",
          "compatibleSurface": null,
          "forceFallbackAdapter": false
        }
      },
      "expected_result": "Default adapter selected",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PHYS_004",
      "category": "Physical Device",
      "test_type": "Request Physical Device - Fallback",
      "input": {
        "type": "PhysicalDeviceOptions",
        "values": {
          "powerPreference": "Default",
          "compatibleSurface": null,
          "forceFallbackAdapter": true
        }
      },
      "expected_result": "Fallback adapter selected",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PHYS_005",
      "category": "Physical Device",
      "test_type": "Query Adapter Features",
      "input": {
        "type": "AdapterQuery",
        "values": {
          "queryType": "features"
        }
      },
      "expected_result": "Feature list retrieved",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "PHYS_006",
      "category": "Physical Device",
      "test_type": "Query Adapter Limits",
      "input": {
        "type": "AdapterQuery",
        "values": {
          "queryType": "limits"
        }
      },
      "expected_result": "Limits structure retrieved",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "PHYS_007",
      "category": "Physical Device",
      "test_type": "Query Adapter Properties",
      "input": {
        "type": "AdapterQuery",
        "values": {
          "queryType": "properties"
        }
      },
      "expected_result": "Properties retrieved",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "PHYS_008",
      "category": "Physical Device",
      "test_type": "Check Discrete GPU",
      "input": {
        "type": "AdapterQuery",
        "values": {
          "queryType": "adapterType"
        }
      },
      "expected_result": "Adapter type identified",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "PHYS_009",
      "category": "Physical Device",
      "test_type": "Get Vendor ID",
      "input": {
        "type": "AdapterQuery",
        "values": {
          "queryType": "vendorId"
        }
      },
      "expected_result": "Vendor ID retrieved",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "PHYS_010",
      "category": "Physical Device",
      "test_type": "Get Device ID",
      "input": {
        "type": "AdapterQuery",
        "values": {
          "queryType": "deviceId"
        }
      },
      "expected_result": "Device ID retrieved",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "DEV_001",
      "category": "Logical Device",
      "test_type": "Create Device - No Features",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Basic Device",
          "requiredFeatures": [],
          "requiredLimits": null
        }
      },
      "expected_result": "Basic device created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "DEV_002",
      "category": "Logical Device",
      "test_type": "Create Device - Timestamp Query",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with Timestamp",
          "requiredFeatures": ["timestamp-query"],
          "requiredLimits": null
        }
      },
      "expected_result": "Device with timestamp feature",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "DEV_003",
      "category": "Logical Device",
      "test_type": "Create Device - Depth Clip Control",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with Depth Clip",
          "requiredFeatures": ["depth-clip-control"],
          "requiredLimits": null
        }
      },
      "expected_result": "Device with depth clip control",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "DEV_004",
      "category": "Logical Device",
      "test_type": "Create Device - Texture Compression BC",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with BC Compression",
          "requiredFeatures": ["texture-compression-bc"],
          "requiredLimits": null
        }
      },
      "expected_result": "Device with BC compression",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "DEV_005",
      "category": "Logical Device",
      "test_type": "Create Device - Multiple Features",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Multi-Feature Device",
          "requiredFeatures": ["timestamp-query", "depth-clip-control", "shader-f16"],
          "requiredLimits": null
        }
      },
      "expected_result": "Device with multiple features",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "DEV_006",
      "category": "Logical Device",
      "test_type": "Create Device - Max Texture 2D Limit",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with Texture Limit",
          "requiredFeatures": [],
          "requiredLimits": {
            "maxTextureDimension2D": 16384
          }
        }
      },
      "expected_result": "Device with 16K texture support",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "DEV_007",
      "category": "Logical Device",
      "test_type": "Create Device - Max Buffer Size",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with Large Buffers",
          "requiredFeatures": [],
          "requiredLimits": {
            "maxBufferSize": 2147483648
          }
        }
      },
      "expected_result": "Device with 2GB buffer support",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "DEV_008",
      "category": "Logical Device",
      "test_type": "Create Device - Max Bind Groups",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with Many Bind Groups",
          "requiredFeatures": [],
          "requiredLimits": {
            "maxBindGroups": 8
          }
        }
      },
      "expected_result": "Device with 8 bind groups",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "DEV_009",
      "category": "Logical Device",
      "test_type": "Create Device - Max Compute Workgroup Size",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with Large Workgroups",
          "requiredFeatures": [],
          "requiredLimits": {
            "maxComputeWorkgroupSizeX": 1024,
            "maxComputeWorkgroupSizeY": 1024,
            "maxComputeWorkgroupSizeZ": 64
          }
        }
      },
      "expected_result": "Device with large workgroups",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "DEV_010",
      "category": "Logical Device",
      "test_type": "Create Device - Invalid Feature",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with Invalid Feature",
          "requiredFeatures": ["non-existent-feature"],
          "requiredLimits": null
        }
      },
      "expected_result": "Device creation failed",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "QUEUE_001",
      "category": "Queue Operations",
      "test_type": "Get Default Queue",
      "input": {
        "type": "QueueRequest",
        "values": {
          "queueIndex": 0
        }
      },
      "expected_result": "Valid queue obtained",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "QUEUE_002",
      "category": "Queue Operations",
      "test_type": "Submit Empty Command Buffer",
      "input": {
        "type": "QueueSubmit",
        "values": {
          "commandBuffers": []
        }
      },
      "expected_result": "Empty submission success",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "QUEUE_003",
      "category": "Queue Operations",
      "test_type": "Submit Single Command Buffer",
      "input": {
        "type": "QueueSubmit",
        "values": {
          "commandBuffers": ["CMD_002"]
        }
      },
      "expected_result": "Single buffer submitted",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "QUEUE_004",
      "category": "Queue Operations",
      "test_type": "Submit Multiple Command Buffers",
      "input": {
        "type": "QueueSubmit",
        "values": {
          "commandBuffers": ["CMD_002", "CMD_003", "CMD_004"]
        }
      },
      "expected_result": "Multiple buffers submitted",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "QUEUE_005",
      "category": "Queue Operations",
      "test_type": "Write Buffer - 256 Bytes",
      "input": {
        "type": "QueueWriteBuffer",
        "values": {
          "bufferSize": 256,
          "dataSize": 256,
          "offset": 0
        }
      },
      "expected_result": "Small buffer written",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "QUEUE_006",
      "category": "Queue Operations",
      "test_type": "Write Buffer - 1KB",
      "input": {
        "type": "QueueWriteBuffer",
        "values": {
          "bufferSize": 1024,
          "dataSize": 1024,
          "offset": 0
        }
      },
      "expected_result": "1KB buffer written",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "QUEUE_007",
      "category": "Queue Operations",
      "test_type": "Write Buffer - 64KB",
      "input": {
        "type": "QueueWriteBuffer",
        "values": {
          "bufferSize": 65536,
          "dataSize": 65536,
          "offset": 0
        }
      },
      "expected_result": "64KB buffer written",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "QUEUE_008",
      "category": "Queue Operations",
      "test_type": "Write Buffer - 1MB",
      "input": {
        "type": "QueueWriteBuffer",
        "values": {
          "bufferSize": 1048576,
          "dataSize": 1048576,
          "offset": 0
        }
      },
      "expected_result": "1MB buffer written",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "QUEUE_009",
      "category": "Queue Operations",
      "test_type": "Write Buffer - 16MB",
      "input": {
        "type": "QueueWriteBuffer",
        "values": {
          "bufferSize": 16777216,
          "dataSize": 16777216,
          "offset": 0
        }
      },
      "expected_result": "16MB buffer written",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "QUEUE_010",
      "category": "Queue Operations",
      "test_type": "Write Buffer - With Offset",
      "input": {
        "type": "QueueWriteBuffer",
        "values": {
          "bufferSize": 1024,
          "dataSize": 256,
          "offset": 512
        }
      },
      "expected_result": "Buffer written at offset",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_001",
      "category": "Command Encoding",
      "test_type": "Create Command Encoder",
      "input": {
        "type": "CommandEncoderDesc",
        "values": {
          "label": "Test Encoder"
        }
      },
      "expected_result": "Valid encoder created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_002",
      "category": "Command Encoding",
      "test_type": "Finish Empty Command Buffer",
      "input": {
        "type": "CommandEncoderFinish",
        "values": {
          "label": "Empty Buffer"
        }
      },
      "expected_result": "Empty buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_003",
      "category": "Command Encoding",
      "test_type": "Copy Buffer to Buffer - 1KB",
      "input": {
        "type": "CommandCopyBuffer",
        "values": {
          "sourceSize": 1024,
          "destSize": 1024,
          "copySize": 1024,
          "sourceOffset": 0,
          "destOffset": 0
        }
      },
      "expected_result": "1KB buffer copy encoded",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_004",
      "category": "Command Encoding",
      "test_type": "Copy Buffer to Buffer - Partial",
      "input": {
        "type": "CommandCopyBuffer",
        "values": {
          "sourceSize": 1024,
          "destSize": 1024,
          "copySize": 512,
          "sourceOffset": 256,
          "destOffset": 0
        }
      },
      "expected_result": "Partial buffer copy encoded",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_005",
      "category": "Command Encoding",
      "test_type": "Copy Buffer to Texture - 2D",
      "input": {
        "type": "CommandCopyBufferToTexture",
        "values": {
          "bufferSize": 262144,
          "textureWidth": 256,
          "textureHeight": 256,
          "textureFormat": "RGBA8Unorm"
        }
      },
      "expected_result": "Buffer to 2D texture copy",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_006",
      "category": "Command Encoding",
      "test_type": "Copy Texture to Buffer",
      "input": {
        "type": "CommandCopyTextureToBuffer",
        "values": {
          "textureWidth": 256,
          "textureHeight": 256,
          "textureFormat": "RGBA8Unorm",
          "bufferSize": 262144
        }
      },
      "expected_result": "Texture to buffer copy",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_007",
      "category": "Command Encoding",
      "test_type": "Copy Texture to Texture",
      "input": {
        "type": "CommandCopyTextureToTexture",
        "values": {
          "sourceWidth": 256,
          "sourceHeight": 256,
          "destWidth": 256,
          "destHeight": 256,
          "format": "RGBA8Unorm"
        }
      },
      "expected_result": "Texture to texture copy",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_008",
      "category": "Command Encoding",
      "test_type": "Clear Buffer",
      "input": {
        "type": "CommandClearBuffer",
        "values": {
          "bufferSize": 1024,
          "offset": 0,
          "size": 1024
        }
      },
      "expected_result": "Buffer cleared",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_009",
      "category": "Command Encoding",
      "test_type": "Push Debug Group",
      "input": {
        "type": "CommandPushDebugGroup",
        "values": {
          "label": "Test Debug Group"
        }
      },
      "expected_result": "Debug group pushed",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "CMD_010",
      "category": "Command Encoding",
      "test_type": "Pop Debug Group",
      "input": {
        "type": "CommandPopDebugGroup",
        "values": {}
      },
      "expected_result": "Debug group popped",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_001",
      "category": "Buffer Management",
      "test_type": "Create Vertex Buffer - 256B",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 256,
          "usage": "Vertex",
          "mappedAtCreation": false,
          "label": "Small Vertex Buffer"
        }
      },
      "expected_result": "256B vertex buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_002",
      "category": "Buffer Management",
      "test_type": "Create Vertex Buffer - 1KB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1024,
          "usage": "Vertex",
          "mappedAtCreation": false,
          "label": "1KB Vertex Buffer"
        }
      },
      "expected_result": "1KB vertex buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_003",
      "category": "Buffer Management",
      "test_type": "Create Vertex Buffer - 64KB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 65536,
          "usage": "Vertex",
          "mappedAtCreation": false,
          "label": "64KB Vertex Buffer"
        }
      },
      "expected_result": "64KB vertex buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_004",
      "category": "Buffer Management",
      "test_type": "Create Vertex Buffer - 1MB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1048576,
          "usage": "Vertex",
          "mappedAtCreation": false,
          "label": "1MB Vertex Buffer"
        }
      },
      "expected_result": "1MB vertex buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_005",
      "category": "Buffer Management",
      "test_type": "Create Index Buffer - 16bit",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 65536,
          "usage": "Index",
          "mappedAtCreation": false,
          "label": "16-bit Index Buffer"
        }
      },
      "expected_result": "16-bit index buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_006",
      "category": "Buffer Management",
      "test_type": "Create Index Buffer - 32bit",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 131072,
          "usage": "Index",
          "mappedAtCreation": false,
          "label": "32-bit Index Buffer"
        }
      },
      "expected_result": "32-bit index buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_007",
      "category": "Buffer Management",
      "test_type": "Create Uniform Buffer - 64B",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 64,
          "usage": "Uniform",
          "mappedAtCreation": false,
          "label": "MVP Matrix Buffer"
        }
      },
      "expected_result": "64B uniform buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_008",
      "category": "Buffer Management",
      "test_type": "Create Uniform Buffer - 256B",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 256,
          "usage": "Uniform",
          "mappedAtCreation": false,
          "label": "Material Buffer"
        }
      },
      "expected_result": "256B uniform buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_009",
      "category": "Buffer Management",
      "test_type": "Create Uniform Buffer - 16KB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 16384,
          "usage": "Uniform",
          "mappedAtCreation": false,
          "label": "Large Uniform Buffer"
        }
      },
      "expected_result": "16KB uniform buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_010",
      "category": "Buffer Management",
      "test_type": "Create Storage Buffer - 1KB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1024,
          "usage": "Storage",
          "mappedAtCreation": false,
          "label": "Small Storage Buffer"
        }
      },
      "expected_result": "1KB storage buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_011",
      "category": "Buffer Management",
      "test_type": "Create Storage Buffer - 1MB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1048576,
          "usage": "Storage",
          "mappedAtCreation": false,
          "label": "1MB Storage Buffer"
        }
      },
      "expected_result": "1MB storage buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_012",
      "category": "Buffer Management",
      "test_type": "Create Storage Buffer - 16MB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 16777216,
          "usage": "Storage",
          "mappedAtCreation": false,
          "label": "16MB Storage Buffer"
        }
      },
      "expected_result": "16MB storage buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_013",
      "category": "Buffer Management",
      "test_type": "Create Multi-Use Buffer - Vertex+Copy",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 4096,
          "usage": ["Vertex", "CopyDst", "CopySrc"],
          "mappedAtCreation": false,
          "label": "Multi-Use Buffer"
        }
      },
      "expected_result": "Multi-use buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_014",
      "category": "Buffer Management",
      "test_type": "Create Mapped Buffer - Write",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1024,
          "usage": ["MapWrite", "CopySrc"],
          "mappedAtCreation": true,
          "label": "Write-Mapped Buffer"
        }
      },
      "expected_result": "Write-mapped buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_015",
      "category": "Buffer Management",
      "test_type": "Create Mapped Buffer - Read",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1024,
          "usage": ["MapRead", "CopyDst"],
          "mappedAtCreation": false,
          "label": "Read-Mapped Buffer"
        }
      },
      "expected_result": "Read-mapped buffer created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_016",
      "category": "Buffer Management",
      "test_type": "Map Buffer for Reading",
      "input": {
        "type": "BufferMap",
        "values": {
          "bufferSize": 1024,
          "mapMode": "Read",
          "offset": 0,
          "size": 1024
        }
      },
      "expected_result": "Buffer mapped for read",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "BUF_017",
      "category": "Buffer Management",
      "test_type": "Map Buffer for Writing",
      "input": {
        "type": "BufferMap",
        "values": {
          "bufferSize": 1024,
          "mapMode": "Write",
          "offset": 0,
          "size": 1024
        }
      },
      "expected_result": "Buffer mapped for write",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "BUF_018",
      "category": "Buffer Management",
      "test_type": "Map Buffer Partial",
      "input": {
        "type": "BufferMap",
        "values": {
          "bufferSize": 1024,
          "mapMode": "Write",
          "offset": 256,
          "size": 512
        }
      },
      "expected_result": "Buffer partially mapped",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "BUF_019",
      "category": "Buffer Management",
      "test_type": "Unmap Buffer",
      "input": {
        "type": "BufferUnmap",
        "values": {}
      },
      "expected_result": "Buffer unmapped",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BUF_020",
      "category": "Buffer Management",
      "test_type": "Create Zero-Size Buffer",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 0,
          "usage": "Vertex",
          "mappedAtCreation": false,
          "label": "Zero Buffer"
        }
      },
      "expected_result": "Returns nullptr",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_001",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 1x1",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [1, 1, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "1x1 Texture"
        }
      },
      "expected_result": "1x1 texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_002",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 64x64",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [64, 64, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "64x64 Texture"
        }
      },
      "expected_result": "64x64 texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_003",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 256x256",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "256x256 Texture"
        }
      },
      "expected_result": "256x256 texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_004",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 512x512",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [512, 512, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "512x512 Texture"
        }
      },
      "expected_result": "512x512 texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_005",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 1024x1024",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [1024, 1024, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "1K Texture"
        }
      },
      "expected_result": "1K texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_006",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 2048x2048",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [2048, 2048, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "2K Texture"
        }
      },
      "expected_result": "2K texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_007",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 4096x4096",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [4096, 4096, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "4K Texture"
        }
      },
      "expected_result": "4K texture created",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "TEX_008",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - HD Resolution",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [1920, 1080, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "HD Texture"
        }
      },
      "expected_result": "HD texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_009",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 4K Resolution",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [3840, 2160, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "4K Resolution Texture"
        }
      },
      "expected_result": "4K resolution texture created",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "TEX_010",
      "category": "Texture Management",
      "test_type": "Create Depth Texture - 16bit",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [1920, 1080, 1],
          "format": "Depth16Unorm",
          "usage": ["RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "16-bit Depth"
        }
      },
      "expected_result": "16-bit depth texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_011",
      "category": "Texture Management",
      "test_type": "Create Depth Texture - 24bit",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [1920, 1080, 1],
          "format": "Depth24Plus",
          "usage": ["RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "24-bit Depth"
        }
      },
      "expected_result": "24-bit depth texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_012",
      "category": "Texture Management",
      "test_type": "Create Depth Texture - 32bit",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [1920, 1080, 1],
          "format": "Depth32Float",
          "usage": ["RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "32-bit Depth"
        }
      },
      "expected_result": "32-bit depth texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_013",
      "category": "Texture Management",
      "test_type": "Create Depth-Stencil Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [1920, 1080, 1],
          "format": "Depth24PlusStencil8",
          "usage": ["RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "Depth-Stencil"
        }
      },
      "expected_result": "Depth-stencil texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_014",
      "category": "Texture Management",
      "test_type": "Create Texture with 2 Mip Levels",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 2,
          "sampleCount": 1,
          "label": "2 Mip Levels"
        }
      },
      "expected_result": "Texture with 2 mips created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_015",
      "category": "Texture Management",
      "test_type": "Create Texture with Full Mip Chain",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [512, 512, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 10,
          "sampleCount": 1,
          "label": "Full Mip Chain"
        }
      },
      "expected_result": "Texture with full mips created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_016",
      "category": "Texture Management",
      "test_type": "Create 3D Texture - 32x32x32",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "3D",
          "size": [32, 32, 32],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "Storage"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "Small 3D Texture"
        }
      },
      "expected_result": "32x32x32 3D texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_017",
      "category": "Texture Management",
      "test_type": "Create 3D Texture - 128x128x128",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "3D",
          "size": [128, 128, 128],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "Storage"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "Medium 3D Texture"
        }
      },
      "expected_result": "128x128x128 3D texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_018",
      "category": "Texture Management",
      "test_type": "Create 3D Texture - 256x256x256",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "3D",
          "size": [256, 256, 256],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "Storage"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "Large 3D Texture"
        }
      },
      "expected_result": "256x256x256 3D texture created",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "TEX_019",
      "category": "Texture Management",
      "test_type": "Create Texture Array - 6 Layers",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [512, 512, 6],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "Cube Map Array"
        }
      },
      "expected_result": "6-layer texture array created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_020",
      "category": "Texture Management",
      "test_type": "Create Texture Array - 32 Layers",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 32],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "Large Texture Array"
        }
      },
      "expected_result": "32-layer texture array created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_021",
      "category": "Texture Management",
      "test_type": "Create MSAA Texture - 2x",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [512, 512, 1],
          "format": "RGBA8Unorm",
          "usage": ["RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 2,
          "label": "MSAA 2x"
        }
      },
      "expected_result": "2x MSAA texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_022",
      "category": "Texture Management",
      "test_type": "Create MSAA Texture - 4x",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [512, 512, 1],
          "format": "RGBA8Unorm",
          "usage": ["RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 4,
          "label": "MSAA 4x"
        }
      },
      "expected_result": "4x MSAA texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_023",
      "category": "Texture Management",
      "test_type": "Create MSAA Texture - 8x",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [512, 512, 1],
          "format": "RGBA8Unorm",
          "usage": ["RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 8,
          "label": "MSAA 8x"
        }
      },
      "expected_result": "8x MSAA texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_024",
      "category": "Texture Management",
      "test_type": "Create R8 Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "R8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "R8 Texture"
        }
      },
      "expected_result": "R8 texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_025",
      "category": "Texture Management",
      "test_type": "Create RG8 Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "RG8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "RG8 Texture"
        }
      },
      "expected_result": "RG8 texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_026",
      "category": "Texture Management",
      "test_type": "Create RGBA16Float Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "RGBA16Float",
          "usage": ["TextureBinding", "Storage"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "RGBA16F Texture"
        }
      },
      "expected_result": "RGBA16Float texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_027",
      "category": "Texture Management",
      "test_type": "Create RGBA32Float Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "RGBA32Float",
          "usage": ["TextureBinding", "Storage"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "RGBA32F Texture"
        }
      },
      "expected_result": "RGBA32Float texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_028",
      "category": "Texture Management",
      "test_type": "Create BGRA8Unorm Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "BGRA8Unorm",
          "usage": ["TextureBinding", "RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "BGRA8 Texture"
        }
      },
      "expected_result": "BGRA8 texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_029",
      "category": "Texture Management",
      "test_type": "Create sRGB Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "RGBA8UnormSrgb",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "sRGB Texture"
        }
      },
      "expected_result": "sRGB texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "TEX_030",
      "category": "Texture Management",
      "test_type": "Create BC1 Compressed Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "BC1RGBAUnorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "BC1 Texture"
        }
      },
      "expected_result": "BC1 compressed texture created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "SHADER_001",
      "category": "Shader Compilation",
      "test_type": "Compile Empty Vertex Shader",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@vertex\nfn main() -> @builtin(position) vec4<f32> {\n    return vec4<f32>(0.0, 0.0, 0.0, 1.0);\n}",
          "label": "Empty Vertex"
        }
      },
      "expected_result": "Empty vertex shader compiled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "SHADER_002",
      "category": "Shader Compilation",
      "test_type": "Compile Empty Fragment Shader",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@fragment\nfn main() -> @location(0) vec4<f32> {\n    return vec4<f32>(1.0, 0.0, 0.0, 1.0);\n}",
          "label": "Empty Fragment"
        }
      },
      "expected_result": "Empty fragment shader compiled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "SHADER_003",
      "category": "Shader Compilation",
      "test_type": "Compile Triangle Vertex Shader",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@vertex\nfn main(@builtin(vertex_index) idx: u32) -> @builtin(position) vec4<f32> {\n    var pos = array<vec2<f32>, 3>(\n        vec2<f32>(-0.5, -0.5),\n        vec2<f32>(0.5, -0.5),\n        vec2<f32>(0.0, 0.5)\n    );\n    return vec4<f32>(pos[idx], 0.0, 1.0);\n}",
          "label": "Triangle Vertex"
        }
      },
      "expected_result": "Triangle vertex shader compiled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "SHADER_004",
      "category": "Shader Compilation",
      "test_type": "Compile Color Fragment Shader",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@fragment\nfn main(@builtin(position) pos: vec4<f32>) -> @location(0) vec4<f32> {\n    return vec4<f32>(pos.x / 800.0, pos.y / 600.0, 0.5, 1.0);\n}",
          "label": "Color Fragment"
        }
      },
      "expected_result": "Color fragment shader compiled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "SHADER_005",
      "category": "Shader Compilation",
      "test_type": "Compile Vertex Shader with Attributes",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@vertex\nfn main(@location(0) pos: vec3<f32>, @location(1) color: vec3<f32>) -> @builtin(position) vec4<f32> {\n    return vec4<f32>(pos, 1.0);\n}",
          "label": "Vertex with Attributes"
        }
      },
      "expected_result": "Vertex shader with attributes compiled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "SHADER_006",
      "category": "Shader Compilation",
      "test_type": "Compile Vertex Shader with MVP",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "struct Uniforms {\n    mvp: mat4x4<f32>,\n}\n@group(0) @binding(0) var<uniform> uniforms: Uniforms;\n\n@vertex\nfn main(@location(0) pos: vec3<f32>) -> @builtin(position) vec4<f32> {\n    return uniforms.mvp * vec4<f32>(pos, 1.0);\n}",
          "label": "MVP Vertex"
        }
      },
      "expected_result": "MVP vertex shader compiled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "SHADER_007",
      "category": "Shader Compilation",
      "test_type": "Compile Fragment Shader with Texture",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@group(0) @binding(1) var mySampler: sampler;\n@group(0) @binding(2) var myTexture: texture_2d<f32>;\n\n@fragment\nfn main(@location(0) uv: vec2<f32>) -> @location(0) vec4<f32> {\n    return textureSample(myTexture, mySampler, uv);\n}",
          "label": "Texture Fragment"
        }
      },
      "expected_result": "Texture fragment shader compiled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "SHADER_008",
      "category": "Shader Compilation",
      "test_type": "Compile Compute Shader - Simple",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@compute @workgroup_size(64, 1, 1)\nfn main(@builtin(global_invocation_id) id: vec3<u32>) {\n    // Simple compute\n}",
          "label": "Simple Compute"
        }
      },
      "expected_result": "Simple compute shader compiled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "SHADER_009",
      "category": "Shader Compilation",
      "test_type": "Compile Compute Shader with Storage",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@group(0) @binding(0) var<storage, read_write> data: array<f32>;\n\n@compute @workgroup_size(64, 1, 1)\nfn main(@builtin(global_invocation_id) id: vec3<u32>) {\n    data[id.x] = data[id.x] * 2.0;\n}",
          "label": "Storage Compute"
        }
      },
      "expected_result": "Storage compute shader compiled",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "SHADER_010",
      "category": "Shader Compilation",
      "test_type": "Compile Invalid Shader",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "invalid wgsl code @#$%",
          "label": "Invalid Shader"
        }
      },
      "expected_result": "Compilation error",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "PIPE_001",
      "category": "Pipeline Creation",
      "test_type": "Create Basic Render Pipeline",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Basic Pipeline",
          "vertexShader": "SHADER_001",
          "fragmentShader": "SHADER_002",
          "primitiveTopology": "TriangleList",
          "cullMode": "Back",
          "frontFace": "CCW"
        }
      },
      "expected_result": "Basic render pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_002",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline - No Culling",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "No Cull Pipeline",
          "vertexShader": "SHADER_001",
          "fragmentShader": "SHADER_002",
          "primitiveTopology": "TriangleList",
          "cullMode": "None",
          "frontFace": "CCW"
        }
      },
      "expected_result": "No-cull pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_003",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline - Front Culling",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Front Cull Pipeline",
          "vertexShader": "SHADER_001",
          "fragmentShader": "SHADER_002",
          "primitiveTopology": "TriangleList",
          "cullMode": "Front",
          "frontFace": "CCW"
        }
      },
      "expected_result": "Front-cull pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_004",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline - Line List",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Line Pipeline",
          "vertexShader": "SHADER_001",
          "fragmentShader": "SHADER_002",
          "primitiveTopology": "LineList",
          "cullMode": "None",
          "frontFace": "CCW"
        }
      },
      "expected_result": "Line pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_005",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline - Point List",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Point Pipeline",
          "vertexShader": "SHADER_001",
          "fragmentShader": "SHADER_002",
          "primitiveTopology": "PointList",
          "cullMode": "None",
          "frontFace": "CCW"
        }
      },
      "expected_result": "Point pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_006",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Vertex Buffer",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "VB Pipeline",
          "vertexShader": "SHADER_005",
          "fragmentShader": "SHADER_002",
          "vertexBuffers": [{
            "arrayStride": 24,
            "stepMode": "Vertex",
            "attributes": [
              {
                "format": "Float32x3",
                "offset": 0,
                "shaderLocation": 0
              },
              {
                "format": "Float32x3",
                "offset": 12,
                "shaderLocation": 1
              }
            ]
          }]
        }
      },
      "expected_result": "Pipeline with vertex buffer created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_007",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Instance Buffer",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Instance Pipeline",
          "vertexShader": "SHADER_005",
          "fragmentShader": "SHADER_002",
          "vertexBuffers": [{
            "arrayStride": 64,
            "stepMode": "Instance",
            "attributes": [{
              "format": "Float32x4",
              "offset": 0,
              "shaderLocation": 2
            }]
          }]
        }
      },
      "expected_result": "Instance pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_008",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Depth Test",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Depth Pipeline",
          "depthStencil": {
            "format": "Depth24Plus",
            "depthWriteEnabled": true,
            "depthCompare": "Less"
          }
        }
      },
      "expected_result": "Depth test pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_009",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Stencil Test",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Stencil Pipeline",
          "depthStencil": {
            "format": "Depth24PlusStencil8",
            "stencilFront": {
              "compare": "Equal",
              "failOp": "Keep",
              "depthFailOp": "Keep",
              "passOp": "Replace"
            }
          }
        }
      },
      "expected_result": "Stencil test pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_010",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Alpha Blending",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Alpha Blend Pipeline",
          "targets": [{
            "format": "BGRA8Unorm",
            "blend": {
              "color": {
                "srcFactor": "SrcAlpha",
                "dstFactor": "OneMinusSrcAlpha",
                "operation": "Add"
              },
              "alpha": {
                "srcFactor": "One",
                "dstFactor": "OneMinusSrcAlpha",
                "operation": "Add"
              }
            },
            "writeMask": "All"
          }]
        }
      },
      "expected_result": "Alpha blend pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_011",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Additive Blending",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Additive Blend Pipeline",
          "targets": [{
            "format": "BGRA8Unorm",
            "blend": {
              "color": {
                "srcFactor": "One",
                "dstFactor": "One",
                "operation": "Add"
              },
              "alpha": {
                "srcFactor": "One",
                "dstFactor": "One",
                "operation": "Add"
              }
            },
            "writeMask": "All"
          }]
        }
      },
      "expected_result": "Additive blend pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_012",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Color Mask",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Color Mask Pipeline",
          "targets": [{
            "format": "BGRA8Unorm",
            "writeMask": "Red|Green"
          }]
        }
      },
      "expected_result": "Color mask pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_013",
      "category": "Pipeline Creation",
      "test_type": "Create Compute Pipeline",
      "input": {
        "type": "ComputePipelineDesc",
        "values": {
          "label": "Basic Compute Pipeline",
          "computeShader": "SHADER_008",
          "entryPoint": "main"
        }
      },
      "expected_result": "Compute pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_014",
      "category": "Pipeline Creation",
      "test_type": "Create Compute Pipeline with Layout",
      "input": {
        "type": "ComputePipelineDesc",
        "values": {
          "label": "Compute Pipeline with Layout",
          "computeShader": "SHADER_009",
          "entryPoint": "main",
          "layout": "BIND_003"
        }
      },
      "expected_result": "Compute pipeline with layout created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PIPE_015",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Multiple Targets",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "MRT Pipeline",
          "targets": [
            {
              "format": "RGBA8Unorm",
              "writeMask": "All"
            },
            {
              "format": "RGBA16Float",
              "writeMask": "All"
            }
          ]
        }
      },
      "expected_result": "MRT pipeline created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "RENDER_001",
      "category": "RenderPass Operations",
      "test_type": "Begin RenderPass - Clear Black",
      "input": {
        "type": "RenderPassDesc",
        "values": {
          "colorAttachments": [{
            "view": "TEX_003",
            "loadOp": "Clear",
            "storeOp": "Store",
            "clearValue": [0.0, 0.0, 0.0, 1.0]
          }]
        }
      },
      "expected_result": "RenderPass begun with black clear",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_002",
      "category": "RenderPass Operations",
      "test_type": "Begin RenderPass - Clear Red",
      "input": {
        "type": "RenderPassDesc",
        "values": {
          "colorAttachments": [{
            "view": "TEX_003",
            "loadOp": "Clear",
            "storeOp": "Store",
            "clearValue": [1.0, 0.0, 0.0, 1.0]
          }]
        }
      },
      "expected_result": "RenderPass begun with red clear",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_003",
      "category": "RenderPass Operations",
      "test_type": "Begin RenderPass - Load Previous",
      "input": {
        "type": "RenderPassDesc",
        "values": {
          "colorAttachments": [{
            "view": "TEX_003",
            "loadOp": "Load",
            "storeOp": "Store"
          }]
        }
      },
      "expected_result": "RenderPass begun with load",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_004",
      "category": "RenderPass Operations",
      "test_type": "Begin RenderPass with Depth",
      "input": {
        "type": "RenderPassDesc",
        "values": {
          "colorAttachments": [{
            "view": "TEX_003",
            "loadOp": "Clear",
            "storeOp": "Store",
            "clearValue": [0.0, 0.0, 0.0, 1.0]
          }],
          "depthStencilAttachment": {
            "view": "TEX_011",
            "depthLoadOp": "Clear",
            "depthStoreOp": "Store",
            "depthClearValue": 1.0
          }
        }
      },
      "expected_result": "RenderPass with depth begun",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_005",
      "category": "RenderPass Operations",
      "test_type": "Begin RenderPass with Stencil",
      "input": {
        "type": "RenderPassDesc",
        "values": {
          "colorAttachments": [{
            "view": "TEX_003",
            "loadOp": "Clear",
            "storeOp": "Store",
            "clearValue": [0.0, 0.0, 0.0, 1.0]
          }],
          "depthStencilAttachment": {
            "view": "TEX_013",
            "depthLoadOp": "Clear",
            "depthStoreOp": "Store",
            "depthClearValue": 1.0,
            "stencilLoadOp": "Clear",
            "stencilStoreOp": "Store",
            "stencilClearValue": 0
          }
        }
      },
      "expected_result": "RenderPass with stencil begun",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_006",
      "category": "RenderPass Operations",
      "test_type": "End RenderPass",
      "input": {
        "type": "RenderPassEnd",
        "values": {}
      },
      "expected_result": "RenderPass ended",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_007",
      "category": "RenderPass Operations",
      "test_type": "Set Pipeline in RenderPass",
      "input": {
        "type": "RenderPassSetPipeline",
        "values": {
          "pipeline": "PIPE_001"
        }
      },
      "expected_result": "Pipeline set in RenderPass",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_008",
      "category": "RenderPass Operations",
      "test_type": "Set Bind Group in RenderPass",
      "input": {
        "type": "RenderPassSetBindGroup",
        "values": {
          "index": 0,
          "bindGroup": "BIND_002"
        }
      },
      "expected_result": "Bind group set in RenderPass",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_009",
      "category": "RenderPass Operations",
      "test_type": "Set Vertex Buffer",
      "input": {
        "type": "RenderPassSetVertexBuffer",
        "values": {
          "slot": 0,
          "buffer": "BUF_002",
          "offset": 0,
          "size": 1024
        }
      },
      "expected_result": "Vertex buffer set",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_010",
      "category": "RenderPass Operations",
      "test_type": "Set Index Buffer - 16bit",
      "input": {
        "type": "RenderPassSetIndexBuffer",
        "values": {
          "buffer": "BUF_005",
          "indexFormat": "Uint16",
          "offset": 0,
          "size": 65536
        }
      },
      "expected_result": "16-bit index buffer set",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_011",
      "category": "RenderPass Operations",
      "test_type": "Set Index Buffer - 32bit",
      "input": {
        "type": "RenderPassSetIndexBuffer",
        "values": {
          "buffer": "BUF_006",
          "indexFormat": "Uint32",
          "offset": 0,
          "size": 131072
        }
      },
      "expected_result": "32-bit index buffer set",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_012",
      "category": "RenderPass Operations",
      "test_type": "Draw - 3 Vertices",
      "input": {
        "type": "RenderPassDraw",
        "values": {
          "vertexCount": 3,
          "instanceCount": 1,
          "firstVertex": 0,
          "firstInstance": 0
        }
      },
      "expected_result": "Draw 3 vertices",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_013",
      "category": "RenderPass Operations",
      "test_type": "Draw - 1000 Vertices",
      "input": {
        "type": "RenderPassDraw",
        "values": {
          "vertexCount": 1000,
          "instanceCount": 1,
          "firstVertex": 0,
          "firstInstance": 0
        }
      },
      "expected_result": "Draw 1000 vertices",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_014",
      "category": "RenderPass Operations",
      "test_type": "Draw Indexed - 6 Indices",
      "input": {
        "type": "RenderPassDrawIndexed",
        "values": {
          "indexCount": 6,
          "instanceCount": 1,
          "firstIndex": 0,
          "baseVertex": 0,
          "firstInstance": 0
        }
      },
      "expected_result": "Draw 6 indexed vertices",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "RENDER_015",
      "category": "RenderPass Operations",
      "test_type": "Draw Instanced - 100 Instances",
      "input": {
        "type": "RenderPassDraw",
        "values": {
          "vertexCount": 3,
          "instanceCount": 100,
          "firstVertex": 0,
          "firstInstance": 0
        }
      },
      "expected_result": "Draw 100 instances",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_001",
      "category": "Compute Operations",
      "test_type": "Begin Compute Pass",
      "input": {
        "type": "ComputePassDesc",
        "values": {
          "label": "Basic Compute Pass"
        }
      },
      "expected_result": "Compute pass begun",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_002",
      "category": "Compute Operations",
      "test_type": "End Compute Pass",
      "input": {
        "type": "ComputePassEnd",
        "values": {}
      },
      "expected_result": "Compute pass ended",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_003",
      "category": "Compute Operations",
      "test_type": "Set Compute Pipeline",
      "input": {
        "type": "ComputePassSetPipeline",
        "values": {
          "pipeline": "PIPE_013"
        }
      },
      "expected_result": "Compute pipeline set",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_004",
      "category": "Compute Operations",
      "test_type": "Set Compute Bind Group",
      "input": {
        "type": "ComputePassSetBindGroup",
        "values": {
          "index": 0,
          "bindGroup": "BIND_003"
        }
      },
      "expected_result": "Compute bind group set",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_005",
      "category": "Compute Operations",
      "test_type": "Dispatch - 1x1x1",
      "input": {
        "type": "ComputePassDispatch",
        "values": {
          "workgroupCountX": 1,
          "workgroupCountY": 1,
          "workgroupCountZ": 1
        }
      },
      "expected_result": "Dispatch 1x1x1",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_006",
      "category": "Compute Operations",
      "test_type": "Dispatch - 32x1x1",
      "input": {
        "type": "ComputePassDispatch",
        "values": {
          "workgroupCountX": 32,
          "workgroupCountY": 1,
          "workgroupCountZ": 1
        }
      },
      "expected_result": "Dispatch 32x1x1",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_007",
      "category": "Compute Operations",
      "test_type": "Dispatch - 256x256x1",
      "input": {
        "type": "ComputePassDispatch",
        "values": {
          "workgroupCountX": 256,
          "workgroupCountY": 256,
          "workgroupCountZ": 1
        }
      },
      "expected_result": "Dispatch 256x256x1",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_008",
      "category": "Compute Operations",
      "test_type": "Dispatch Indirect",
      "input": {
        "type": "ComputePassDispatchIndirect",
        "values": {
          "indirectBuffer": "BUF_010",
          "indirectOffset": 0
        }
      },
      "expected_result": "Indirect dispatch",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_009",
      "category": "Compute Operations",
      "test_type": "Insert Debug Marker",
      "input": {
        "type": "ComputePassInsertDebugMarker",
        "values": {
          "markerLabel": "Compute Work"
        }
      },
      "expected_result": "Debug marker inserted",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPUTE_010",
      "category": "Compute Operations",
      "test_type": "Write Timestamp",
      "input": {
        "type": "ComputePassWriteTimestamp",
        "values": {
          "querySet": "SYNC_001",
          "queryIndex": 0
        }
      },
      "expected_result": "Timestamp written",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "SYNC_001",
      "category": "Synchronization",
      "test_type": "Create Query Set - Timestamp",
      "input": {
        "type": "QuerySetDesc",
        "values": {
          "type": "Timestamp",
          "count": 16,
          "label": "Timestamp Queries"
        }
      },
      "expected_result": "Timestamp query set created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "SYNC_002",
      "category": "Synchronization",
      "test_type": "Create Query Set - Occlusion",
      "input": {
        "type": "QuerySetDesc",
        "values": {
          "type": "Occlusion",
          "count": 8,
          "label": "Occlusion Queries"
        }
      },
      "expected_result": "Occlusion query set created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "SYNC_003",
      "category": "Synchronization",
      "test_type": "Resolve Query Set",
      "input": {
        "type": "CommandResolveQuerySet",
        "values": {
          "querySet": "SYNC_001",
          "firstQuery": 0,
          "queryCount": 2,
          "destination": "BUF_010",
          "destinationOffset": 0
        }
      },
      "expected_result": "Query set resolved",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "SYNC_004",
      "category": "Synchronization",
      "test_type": "Queue On Submitted Work Done",
      "input": {
        "type": "QueueOnSubmittedWorkDone",
        "values": {}
      },
      "expected_result": "Work done callback registered",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "SYNC_005",
      "category": "Synchronization",
      "test_type": "Device Poll",
      "input": {
        "type": "DevicePoll",
        "values": {
          "wait": false
        }
      },
      "expected_result": "Device polled",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "SWAP_001",
      "category": "SwapChain Management",
      "test_type": "Create SwapChain - 800x600",
      "input": {
        "type": "SwapChainDesc",
        "values": {
          "width": 800,
          "height": 600,
          "format": "BGRA8Unorm",
          "usage": "RenderAttachment",
          "presentMode": "Fifo"
        }
      },
      "expected_result": "800x600 swapchain created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "SWAP_002",
      "category": "SwapChain Management",
      "test_type": "Create SwapChain - 1920x1080",
      "input": {
        "type": "SwapChainDesc",
        "values": {
          "width": 1920,
          "height": 1080,
          "format": "BGRA8Unorm",
          "usage": "RenderAttachment",
          "presentMode": "Fifo"
        }
      },
      "expected_result": "1920x1080 swapchain created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "SWAP_003",
      "category": "SwapChain Management",
      "test_type": "Create SwapChain - Immediate Mode",
      "input": {
        "type": "SwapChainDesc",
        "values": {
          "width": 1280,
          "height": 720,
          "format": "BGRA8Unorm",
          "usage": "RenderAttachment",
          "presentMode": "Immediate"
        }
      },
      "expected_result": "Immediate mode swapchain created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "SWAP_004",
      "category": "SwapChain Management",
      "test_type": "Create SwapChain - Mailbox Mode",
      "input": {
        "type": "SwapChainDesc",
        "values": {
          "width": 1280,
          "height": 720,
          "format": "BGRA8Unorm",
          "usage": "RenderAttachment",
          "presentMode": "Mailbox"
        }
      },
      "expected_result": "Mailbox mode swapchain created",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "SWAP_005",
      "category": "SwapChain Management",
      "test_type": "Get Current Texture View",
      "input": {
        "type": "SwapChainGetCurrentTextureView",
        "values": {}
      },
      "expected_result": "Current texture view obtained",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "SWAP_006",
      "category": "SwapChain Management",
      "test_type": "Present SwapChain",
      "input": {
        "type": "SwapChainPresent",
        "values": {}
      },
      "expected_result": "SwapChain presented",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "SWAP_007",
      "category": "SwapChain Management",
      "test_type": "Resize SwapChain",
      "input": {
        "type": "SwapChainResize",
        "values": {
          "newWidth": 1024,
          "newHeight": 768
        }
      },
      "expected_result": "SwapChain resized",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "BIND_001",
      "category": "Resource Binding",
      "test_type": "Create Bind Group Layout - Uniform",
      "input": {
        "type": "BindGroupLayoutDesc",
        "values": {
          "entries": [{
            "binding": 0,
            "visibility": "Vertex",
            "buffer": {
              "type": "Uniform",
              "hasDynamicOffset": false,
              "minBindingSize": 64
            }
          }],
          "label": "Uniform BGL"
        }
      },
      "expected_result": "Uniform bind group layout created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BIND_002",
      "category": "Resource Binding",
      "test_type": "Create Bind Group - Uniform",
      "input": {
        "type": "BindGroupDesc",
        "values": {
          "layout": "BIND_001",
          "entries": [{
            "binding": 0,
            "buffer": "BUF_007",
            "offset": 0,
            "size": 64
          }],
          "label": "Uniform Bind Group"
        }
      },
      "expected_result": "Uniform bind group created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BIND_003",
      "category": "Resource Binding",
      "test_type": "Create Bind Group Layout - Storage",
      "input": {
        "type": "BindGroupLayoutDesc",
        "values": {
          "entries": [{
            "binding": 0,
            "visibility": "Compute",
            "buffer": {
              "type": "Storage",
              "hasDynamicOffset": false,
              "minBindingSize": 0
            }
          }],
          "label": "Storage BGL"
        }
      },
      "expected_result": "Storage bind group layout created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BIND_004",
      "category": "Resource Binding",
      "test_type": "Create Bind Group Layout - Texture",
      "input": {
        "type": "BindGroupLayoutDesc",
        "values": {
          "entries": [{
            "binding": 0,
            "visibility": "Fragment",
            "texture": {
              "sampleType": "Float",
              "viewDimension": "2D",
              "multisampled": false
            }
          }],
          "label": "Texture BGL"
        }
      },
      "expected_result": "Texture bind group layout created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BIND_005",
      "category": "Resource Binding",
      "test_type": "Create Bind Group Layout - Sampler",
      "input": {
        "type": "BindGroupLayoutDesc",
        "values": {
          "entries": [{
            "binding": 0,
            "visibility": "Fragment",
            "sampler": {
              "type": "Filtering"
            }
          }],
          "label": "Sampler BGL"
        }
      },
      "expected_result": "Sampler bind group layout created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "BIND_006",
      "category": "Resource Binding",
      "test_type": "Create Pipeline Layout",
      "input": {
        "type": "PipelineLayoutDesc",
        "values": {
          "bindGroupLayouts": ["BIND_001", "BIND_004", "BIND_005"],
          "label": "Pipeline Layout"
        }
      },
      "expected_result": "Pipeline layout created",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "MEM_001",
      "category": "Memory Management",
      "test_type": "Allocate 100 Small Buffers",
      "input": {
        "type": "StressTest",
        "values": {
          "resourceType": "Buffer",
          "count": 100,
          "sizeEach": 256
        }
      },
      "expected_result": "100 small buffers allocated",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "MEM_002",
      "category": "Memory Management",
      "test_type": "Allocate 1000 Small Buffers",
      "input": {
        "type": "StressTest",
        "values": {
          "resourceType": "Buffer",
          "count": 1000,
          "sizeEach": 256
        }
      },
      "expected_result": "1000 small buffers allocated",
      "timeout_ms": 5000,
      "enabled": true
    },
    {
      "id": "MEM_003",
      "category": "Memory Management",
      "test_type": "Allocate 100 Large Buffers",
      "input": {
        "type": "StressTest",
        "values": {
          "resourceType": "Buffer",
          "count": 100,
          "sizeEach": 1048576
        }
      },
      "expected_result": "100 large buffers allocated",
      "timeout_ms": 5000,
      "enabled": true
    },
    {
      "id": "MEM_004",
      "category": "Memory Management",
      "test_type": "Allocate 100 Textures",
      "input": {
        "type": "StressTest",
        "values": {
          "resourceType": "Texture",
          "count": 100,
          "textureSize": [256, 256]
        }
      },
      "expected_result": "100 textures allocated",
      "timeout_ms": 5000,
      "enabled": true
    },
    {
      "id": "MEM_005",
      "category": "Memory Management",
      "test_type": "Memory Pressure Test",
      "input": {
        "type": "StressTest",
        "values": {
          "resourceType": "Mixed",
          "bufferCount": 500,
          "textureCount": 100,
          "totalMemoryMB": 1024
        }
      },
      "expected_result": "Memory pressure handled",
      "timeout_ms": 10000,
      "enabled": true
    },
    {
      "id": "ERR_001",
      "category": "Error Recovery",
      "test_type": "Buffer Overflow Write",
      "input": {
        "type": "BufferWrite",
        "values": {
          "buffer_size": 512,
          "write_size": 1024
        }
      },
      "expected_result": "Error handled gracefully",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "ERR_002",
      "category": "Error Recovery",
      "test_type": "Invalid Buffer Mapping",
      "input": {
        "type": "BufferMap",
        "values": {
          "bufferSize": 1024,
          "mapMode": "Read",
          "offset": 2048,
          "size": 512
        }
      },
      "expected_result": "Mapping error handled",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "ERR_003",
      "category": "Error Recovery",
      "test_type": "Invalid Texture Format",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "InvalidFormat",
          "usage": ["TextureBinding"]
        }
      },
      "expected_result": "Format error handled",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "ERR_004",
      "category": "Error Recovery",
      "test_type": "Pipeline State Mismatch",
      "input": {
        "type": "PipelineStateMismatch",
        "values": {
          "vertexBufferExpected": true,
          "vertexBufferProvided": false
        }
      },
      "expected_result": "State mismatch handled",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "ERR_005",
      "category": "Error Recovery",
      "test_type": "Out of Memory",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 68719476736,
          "usage": "Storage"
        }
      },
      "expected_result": "OOM handled gracefully",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PERF_001",
      "category": "Performance",
      "test_type": "Rapid Buffer Creation - 1000",
      "input": {
        "type": "PerformanceTest",
        "values": {
          "operation": "CreateBuffer",
          "iterations": 1000,
          "bufferSize": 256
        }
      },
      "expected_result": "1000 buffers in < 100ms",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "PERF_002",
      "category": "Performance",
      "test_type": "Rapid Buffer Creation - 10000",
      "input": {
        "type": "PerformanceTest",
        "values": {
          "operation": "CreateBuffer",
          "iterations": 10000,
          "bufferSize": 256
        }
      },
      "expected_result": "10000 buffers in < 1s",
      "timeout_ms": 2000,
      "enabled": true
    },
    {
      "id": "PERF_003",
      "category": "Performance",
      "test_type": "Rapid Texture Creation - 100",
      "input": {
        "type": "PerformanceTest",
        "values": {
          "operation": "CreateTexture",
          "iterations": 100,
          "textureSize": [256, 256]
        }
      },
      "expected_result": "100 textures in < 500ms",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "PERF_004",
      "category": "Performance",
      "test_type": "Rapid Command Encoding",
      "input": {
        "type": "PerformanceTest",
        "values": {
          "operation": "CommandEncoding",
          "iterations": 1000
        }
      },
      "expected_result": "1000 commands in < 100ms",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "PERF_005",
      "category": "Performance",
      "test_type": "Rapid Draw Calls",
      "input": {
        "type": "PerformanceTest",
        "values": {
          "operation": "DrawCalls",
          "iterations": 10000
        }
      },
      "expected_result": "10000 draws in < 500ms",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "VAL_001",
      "category": "Validation",
      "test_type": "Invalid Buffer Usage - MapRead+MapWrite",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1024,
          "usage": ["MapRead", "MapWrite"]
        }
      },
      "expected_result": "Validation error",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "VAL_002",
      "category": "Validation",
      "test_type": "Invalid Texture Size - 0x0",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [0, 0, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding"]
        }
      },
      "expected_result": "Validation error",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "VAL_003",
      "category": "Validation",
      "test_type": "Invalid Mip Level Count",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding"],
          "mipLevelCount": 20
        }
      },
      "expected_result": "Validation error",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "VAL_004",
      "category": "Validation",
      "test_type": "Invalid Sample Count",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "RGBA8Unorm",
          "usage": ["RenderAttachment"],
          "sampleCount": 7
        }
      },
      "expected_result": "Validation error",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "VAL_005",
      "category": "Validation",
      "test_type": "Bind Group Layout Mismatch",
      "input": {
        "type": "BindGroupDesc",
        "values": {
          "layout": "BIND_001",
          "entries": [{
            "binding": 1,
            "buffer": "BUF_007"
          }]
        }
      },
      "expected_result": "Validation error",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPAT_001",
      "category": "Compatibility",
      "test_type": "Check Timestamp Query Support",
      "input": {
        "type": "FeatureQuery",
        "values": {
          "features": ["timestamp-query"]
        }
      },
      "expected_result": "Feature availability returned",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPAT_002",
      "category": "Compatibility",
      "test_type": "Check BC Compression Support",
      "input": {
        "type": "FeatureQuery",
        "values": {
          "features": ["texture-compression-bc"]
        }
      },
      "expected_result": "Feature availability returned",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPAT_003",
      "category": "Compatibility",
      "test_type": "Check F16 Support",
      "input": {
        "type": "FeatureQuery",
        "values": {
          "features": ["shader-f16"]
        }
      },
      "expected_result": "Feature availability returned",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPAT_004",
      "category": "Compatibility",
      "test_type": "Check Max Texture Size",
      "input": {
        "type": "LimitQuery",
        "values": {
          "limits": ["maxTextureDimension2D"]
        }
      },
      "expected_result": "Texture size limit returned",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "COMPAT_005",
      "category": "Compatibility",
      "test_type": "Check Max Buffer Size",
      "input": {
        "type": "LimitQuery",
        "values": {
          "limits": ["maxBufferSize"]
        }
      },
      "expected_result": "Buffer size limit returned",
      "timeout_ms": 500,
      "enabled": true
    },
    {
      "id": "STRESS_001",
      "category": "Stress Testing",
      "test_type": "Maximum Texture Size",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [16384, 16384, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding"]
        }
      },
      "expected_result": "16K texture or limit error",
      "timeout_ms": 5000,
      "enabled": true
    },
    {
      "id": "STRESS_002",
      "category": "Stress Testing",
      "test_type": "Maximum Buffer Size",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 2147483648,
          "usage": "Storage"
        }
      },
      "expected_result": "2GB buffer or limit error",
      "timeout_ms": 5000,
      "enabled": true
    },
    {
      "id": "STRESS_003",
      "category": "Stress Testing",
      "test_type": "Maximum Bind Groups",
      "input": {
        "type": "StressTest",
        "values": {
          "resourceType": "BindGroup",
          "count": 1000
        }
      },
      "expected_result": "1000 bind groups or limit",
      "timeout_ms": 5000,
      "enabled": true
    },
    {
      "id": "STRESS_004",
      "category": "Stress Testing",
      "test_type": "Rapid Context Switching",
      "input": {
        "type": "StressTest",
        "values": {
          "operation": "ContextSwitch",
          "iterations": 1000
        }
      },
      "expected_result": "1000 context switches",
      "timeout_ms": 10000,
      "enabled": true
    },
    {
      "id": "STRESS_005",
      "category": "Stress Testing",
      "test_type": "Concurrent Resource Creation",
      "input": {
        "type": "StressTest",
        "values": {
          "operation": "ConcurrentCreation",
          "threadCount": 8,
          "resourcesPerThread": 100
        }
      },
      "expected_result": "800 concurrent resources",
      "timeout_ms": 10000,
      "enabled": true
    }
  ],
  "test_suites": {
    "quick_smoke": [
      "INST_001", "PHYS_001", "DEV_001", "QUEUE_001", "CMD_001",
      "BUF_001", "TEX_001", "SHADER_001", "SHADER_002", "PIPE_001"
    ],
    "full_instance": [
      "INST_001", "INST_002", "INST_003", "INST_004", "INST_005",
      "INST_006", "INST_007", "INST_008", "INST_009", "INST_010"
    ],
    "full_buffer": [
      "BUF_001", "BUF_002", "BUF_003", "BUF_004", "BUF_005",
      "BUF_006", "BUF_007", "BUF_008", "BUF_009", "BUF_010",
      "BUF_011", "BUF_012", "BUF_013", "BUF_014", "BUF_015",
      "BUF_016", "BUF_017", "BUF_018", "BUF_019", "BUF_020"
    ],
    "full_texture": [
      "TEX_001", "TEX_002", "TEX_003", "TEX_004", "TEX_005",
      "TEX_006", "TEX_007", "TEX_008", "TEX_009", "TEX_010",
      "TEX_011", "TEX_012", "TEX_013", "TEX_014", "TEX_015",
      "TEX_016", "TEX_017", "TEX_018", "TEX_019", "TEX_020",
      "TEX_021", "TEX_022", "TEX_023", "TEX_024", "TEX_025",
      "TEX_026", "TEX_027", "TEX_028", "TEX_029", "TEX_030"
    ],
    "stress_test": [
      "MEM_001", "MEM_002", "MEM_003", "MEM_004", "MEM_005",
      "PERF_001", "PERF_002", "PERF_003", "PERF_004", "PERF_005",
      "STRESS_001", "STRESS_002", "STRESS_003", "STRESS_004", "STRESS_005"
    ],
    "validation_test": [
      "VAL_001", "VAL_002", "VAL_003", "VAL_004", "VAL_005",
      "ERR_001", "ERR_002", "ERR_003", "ERR_004", "ERR_005"
    ],
    "full_test": "all"
  }
}