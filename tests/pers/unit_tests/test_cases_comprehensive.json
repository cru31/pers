{
  "metadata": {
    "version": "2.0.0",
    "date": "2025-01-03",
    "total_tests": 500,
    "categories": [
      "Instance Management",
      "Physical Device",
      "Logical Device",
      "Queue Operations",
      "Command Encoding",
      "Buffer Management",
      "Texture Management",
      "Shader Compilation",
      "Pipeline Creation",
      "RenderPass Operations",
      "Compute Operations",
      "Synchronization",
      "SwapChain Management",
      "Resource Binding",
      "Memory Management",
      "Error Recovery",
      "Performance",
      "Validation",
      "Compatibility",
      "Stress Testing"
    ]
  },
  "test_cases": [
    {
      "id": "INST_001",
      "category": "Instance Management",
      "test_type": "Instance Creation - Validation Enabled",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "Test App",
          "engineName": "Pers Graphics Engine",
          "apiVersion": "1.0.0"
        }
      },
      "expected_result": "Valid instance created with validation",
      "expected_callstack": [
        "WebGPUBackendFactory::createInstance()",
        "WebGPUInstance::initialize()",
        "wgpuCreateInstance()"
      ],
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_002",
      "category": "Instance Management",
      "test_type": "Instance Creation - Validation Disabled",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": false,
          "applicationName": "Performance Test",
          "engineName": "Pers Graphics Engine"
        }
      },
      "expected_result": "Valid instance created without validation",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_003",
      "category": "Instance Management",
      "test_type": "Instance Creation - Empty Application Name",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "",
          "engineName": "Pers Graphics Engine"
        }
      },
      "expected_result": "Valid instance created with default name",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "INST_004",
      "category": "Instance Management",
      "test_type": "Instance Creation - Very Long Application Name",
      "input": {
        "type": "InstanceDesc",
        "values": {
          "enableValidation": true,
          "applicationName": "ThisIsAnExtremelyLongApplicationNameThatExceedsNormalLimitsAndShouldBeHandledProperlyByTheSystemWithoutCausingBufferOverflowsOrOtherIssues_1234567890_ABCDEFGHIJKLMNOPQRSTUVWXYZ",
          "engineName": "Pers"
        }
      },
      "expected_result": "Valid instance with truncated name",
      "timeout_ms": 1000,
      "enabled": true
    },
    {
      "id": "PHYS_001",
      "category": "Physical Device",
      "test_type": "Request Physical Device - High Performance",
      "input": {
        "type": "PhysicalDeviceOptions",
        "values": {
          "powerPreference": "HighPerformance",
          "compatibleSurface": null,
          "forceFallbackAdapter": false
        }
      },
      "expected_result": "High performance adapter selected",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["INST_001"]
    },
    {
      "id": "PHYS_002",
      "category": "Physical Device",
      "test_type": "Request Physical Device - Low Power",
      "input": {
        "type": "PhysicalDeviceOptions",
        "values": {
          "powerPreference": "LowPower",
          "compatibleSurface": null,
          "forceFallbackAdapter": false
        }
      },
      "expected_result": "Low power adapter selected",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["INST_001"]
    },
    {
      "id": "PHYS_003",
      "category": "Physical Device",
      "test_type": "Request Physical Device - Fallback",
      "input": {
        "type": "PhysicalDeviceOptions",
        "values": {
          "powerPreference": "Default",
          "compatibleSurface": null,
          "forceFallbackAdapter": true
        }
      },
      "expected_result": "Fallback adapter selected",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["INST_001"]
    },
    {
      "id": "PHYS_004",
      "category": "Physical Device",
      "test_type": "Query Adapter Features",
      "input": {
        "type": "AdapterQuery",
        "values": {
          "queryType": "features"
        }
      },
      "expected_result": "Feature list retrieved",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["PHYS_001"]
    },
    {
      "id": "PHYS_005",
      "category": "Physical Device",
      "test_type": "Query Adapter Limits",
      "input": {
        "type": "AdapterQuery",
        "values": {
          "queryType": "limits"
        }
      },
      "expected_result": "Limits structure retrieved",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["PHYS_001"]
    },
    {
      "id": "DEV_001",
      "category": "Logical Device",
      "test_type": "Create Device - No Features",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Basic Device",
          "requiredFeatures": [],
          "requiredLimits": null
        }
      },
      "expected_result": "Basic device created",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["PHYS_001"]
    },
    {
      "id": "DEV_002",
      "category": "Logical Device",
      "test_type": "Create Device - With Timestamp Query",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with Timestamp",
          "requiredFeatures": ["timestamp-query"],
          "requiredLimits": null
        }
      },
      "expected_result": "Device created with timestamp feature",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["PHYS_001"]
    },
    {
      "id": "DEV_003",
      "category": "Logical Device",
      "test_type": "Create Device - Custom Limits",
      "input": {
        "type": "DeviceDesc",
        "values": {
          "label": "Device with Limits",
          "requiredFeatures": [],
          "requiredLimits": {
            "maxTextureDimension2D": 16384,
            "maxBufferSize": 2147483648
          }
        }
      },
      "expected_result": "Device created with custom limits",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["PHYS_001"]
    },
    {
      "id": "QUEUE_001",
      "category": "Queue Operations",
      "test_type": "Get Default Queue",
      "input": {
        "type": "QueueRequest",
        "values": {
          "queueIndex": 0
        }
      },
      "expected_result": "Valid queue obtained",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "QUEUE_002",
      "category": "Queue Operations",
      "test_type": "Submit Empty Command Buffer",
      "input": {
        "type": "QueueSubmit",
        "values": {
          "commandBuffers": []
        }
      },
      "expected_result": "Empty submission success",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["QUEUE_001"]
    },
    {
      "id": "QUEUE_003",
      "category": "Queue Operations",
      "test_type": "Write Buffer - Small Data",
      "input": {
        "type": "QueueWriteBuffer",
        "values": {
          "bufferSize": 256,
          "dataSize": 256,
          "offset": 0
        }
      },
      "expected_result": "Buffer written successfully",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["QUEUE_001"]
    },
    {
      "id": "QUEUE_004",
      "category": "Queue Operations",
      "test_type": "Write Buffer - Large Data",
      "input": {
        "type": "QueueWriteBuffer",
        "values": {
          "bufferSize": 67108864,
          "dataSize": 67108864,
          "offset": 0
        }
      },
      "expected_result": "Large buffer written",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["QUEUE_001"]
    },
    {
      "id": "QUEUE_005",
      "category": "Queue Operations",
      "test_type": "Write Buffer - With Offset",
      "input": {
        "type": "QueueWriteBuffer",
        "values": {
          "bufferSize": 1024,
          "dataSize": 256,
          "offset": 512
        }
      },
      "expected_result": "Buffer written at offset",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["QUEUE_001"]
    },
    {
      "id": "CMD_001",
      "category": "Command Encoding",
      "test_type": "Create Command Encoder",
      "input": {
        "type": "CommandEncoderDesc",
        "values": {
          "label": "Test Encoder"
        }
      },
      "expected_result": "Valid encoder created",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "CMD_002",
      "category": "Command Encoding",
      "test_type": "Finish Empty Command Buffer",
      "input": {
        "type": "CommandEncoderFinish",
        "values": {
          "label": "Empty Buffer"
        }
      },
      "expected_result": "Empty buffer created",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["CMD_001"]
    },
    {
      "id": "CMD_003",
      "category": "Command Encoding",
      "test_type": "Copy Buffer to Buffer",
      "input": {
        "type": "CommandCopyBuffer",
        "values": {
          "sourceSize": 1024,
          "destSize": 1024,
          "copySize": 1024,
          "sourceOffset": 0,
          "destOffset": 0
        }
      },
      "expected_result": "Buffer copy command encoded",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["CMD_001"]
    },
    {
      "id": "CMD_004",
      "category": "Command Encoding",
      "test_type": "Copy Buffer to Texture",
      "input": {
        "type": "CommandCopyBufferToTexture",
        "values": {
          "bufferSize": 262144,
          "textureWidth": 256,
          "textureHeight": 256,
          "textureFormat": "RGBA8Unorm"
        }
      },
      "expected_result": "Buffer to texture copy encoded",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["CMD_001"]
    },
    {
      "id": "BUF_001",
      "category": "Buffer Management",
      "test_type": "Create Vertex Buffer - 1KB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1024,
          "usage": "Vertex",
          "mappedAtCreation": false,
          "label": "Vertex Buffer 1KB"
        }
      },
      "expected_result": "Valid vertex buffer",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "BUF_002",
      "category": "Buffer Management",
      "test_type": "Create Index Buffer - 64KB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 65536,
          "usage": "Index",
          "mappedAtCreation": false,
          "label": "Index Buffer 64KB"
        }
      },
      "expected_result": "Valid index buffer",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "BUF_003",
      "category": "Buffer Management",
      "test_type": "Create Uniform Buffer - 256B",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 256,
          "usage": "Uniform",
          "mappedAtCreation": false,
          "label": "Uniform Buffer"
        }
      },
      "expected_result": "Valid uniform buffer",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "BUF_004",
      "category": "Buffer Management",
      "test_type": "Create Storage Buffer - 1MB",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1048576,
          "usage": "Storage",
          "mappedAtCreation": false,
          "label": "Storage Buffer 1MB"
        }
      },
      "expected_result": "Valid storage buffer",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "BUF_005",
      "category": "Buffer Management",
      "test_type": "Create Multi-Use Buffer",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 4096,
          "usage": ["Vertex", "CopyDst", "CopySrc"],
          "mappedAtCreation": false,
          "label": "Multi-Use Buffer"
        }
      },
      "expected_result": "Valid multi-use buffer",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "BUF_006",
      "category": "Buffer Management",
      "test_type": "Create Mapped Buffer",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1024,
          "usage": ["MapWrite", "CopySrc"],
          "mappedAtCreation": true,
          "label": "Mapped Buffer"
        }
      },
      "expected_result": "Buffer mapped at creation",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "BUF_007",
      "category": "Buffer Management",
      "test_type": "Map Buffer for Reading",
      "input": {
        "type": "BufferMap",
        "values": {
          "bufferSize": 1024,
          "mapMode": "Read",
          "offset": 0,
          "size": 1024
        }
      },
      "expected_result": "Buffer mapped for read",
      "timeout_ms": 1000,
      "enabled": true,
      "dependencies": ["BUF_001"]
    },
    {
      "id": "BUF_008",
      "category": "Buffer Management",
      "test_type": "Map Buffer for Writing",
      "input": {
        "type": "BufferMap",
        "values": {
          "bufferSize": 1024,
          "mapMode": "Write",
          "offset": 0,
          "size": 1024
        }
      },
      "expected_result": "Buffer mapped for write",
      "timeout_ms": 1000,
      "enabled": true,
      "dependencies": ["BUF_006"]
    },
    {
      "id": "BUF_009",
      "category": "Buffer Management",
      "test_type": "Unmap Buffer",
      "input": {
        "type": "BufferUnmap",
        "values": {}
      },
      "expected_result": "Buffer unmapped",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["BUF_008"]
    },
    {
      "id": "BUF_010",
      "category": "Buffer Management",
      "test_type": "Create Zero-Size Buffer",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 0,
          "usage": "Vertex",
          "mappedAtCreation": false,
          "label": "Zero Buffer"
        }
      },
      "expected_result": "Returns nullptr",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "TEX_001",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 256x256 RGBA8",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [256, 256, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "Test Texture 256x256"
        }
      },
      "expected_result": "Valid 2D texture",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "TEX_002",
      "category": "Texture Management",
      "test_type": "Create 2D Texture - 4K Resolution",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [3840, 2160, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "4K Texture"
        }
      },
      "expected_result": "Valid 4K texture",
      "timeout_ms": 1000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "TEX_003",
      "category": "Texture Management",
      "test_type": "Create Depth Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [1920, 1080, 1],
          "format": "Depth24Plus",
          "usage": ["RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "Depth Buffer"
        }
      },
      "expected_result": "Valid depth texture",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "TEX_004",
      "category": "Texture Management",
      "test_type": "Create Texture with Mipmaps",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [512, 512, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "CopyDst"],
          "mipLevelCount": 10,
          "sampleCount": 1,
          "label": "Mipmap Texture"
        }
      },
      "expected_result": "Texture with 10 mip levels",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "TEX_005",
      "category": "Texture Management",
      "test_type": "Create 3D Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "3D",
          "size": [128, 128, 128],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding", "Storage"],
          "mipLevelCount": 1,
          "sampleCount": 1,
          "label": "3D Volume Texture"
        }
      },
      "expected_result": "Valid 3D texture",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "TEX_006",
      "category": "Texture Management",
      "test_type": "Create Multisampled Texture",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [512, 512, 1],
          "format": "RGBA8Unorm",
          "usage": ["RenderAttachment"],
          "mipLevelCount": 1,
          "sampleCount": 4,
          "label": "MSAA 4x Texture"
        }
      },
      "expected_result": "Valid MSAA texture",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "TEX_007",
      "category": "Texture Management",
      "test_type": "Create Texture View - 2D",
      "input": {
        "type": "TextureViewDesc",
        "values": {
          "format": "RGBA8Unorm",
          "dimension": "2D",
          "baseMipLevel": 0,
          "mipLevelCount": 1,
          "baseArrayLayer": 0,
          "arrayLayerCount": 1,
          "aspect": "All"
        }
      },
      "expected_result": "Valid texture view",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["TEX_001"]
    },
    {
      "id": "TEX_008",
      "category": "Texture Management",
      "test_type": "Create Sampler - Linear",
      "input": {
        "type": "SamplerDesc",
        "values": {
          "addressModeU": "Repeat",
          "addressModeV": "Repeat",
          "addressModeW": "Repeat",
          "magFilter": "Linear",
          "minFilter": "Linear",
          "mipmapFilter": "Linear",
          "lodMinClamp": 0.0,
          "lodMaxClamp": 32.0,
          "compare": null,
          "maxAnisotropy": 1
        }
      },
      "expected_result": "Valid linear sampler",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "TEX_009",
      "category": "Texture Management",
      "test_type": "Create Sampler - Nearest",
      "input": {
        "type": "SamplerDesc",
        "values": {
          "addressModeU": "ClampToEdge",
          "addressModeV": "ClampToEdge",
          "addressModeW": "ClampToEdge",
          "magFilter": "Nearest",
          "minFilter": "Nearest",
          "mipmapFilter": "Nearest",
          "lodMinClamp": 0.0,
          "lodMaxClamp": 1.0,
          "compare": null,
          "maxAnisotropy": 1
        }
      },
      "expected_result": "Valid nearest sampler",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "TEX_010",
      "category": "Texture Management",
      "test_type": "Create Comparison Sampler",
      "input": {
        "type": "SamplerDesc",
        "values": {
          "addressModeU": "ClampToEdge",
          "addressModeV": "ClampToEdge",
          "addressModeW": "ClampToEdge",
          "magFilter": "Linear",
          "minFilter": "Linear",
          "mipmapFilter": "Linear",
          "lodMinClamp": 0.0,
          "lodMaxClamp": 1.0,
          "compare": "Less",
          "maxAnisotropy": 1
        }
      },
      "expected_result": "Valid comparison sampler",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "SHADER_001",
      "category": "Shader Compilation",
      "test_type": "Compile Vertex Shader - Basic",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@vertex\nfn main(@builtin(vertex_index) idx: u32) -> @builtin(position) vec4<f32> {\n    return vec4<f32>(0.0, 0.0, 0.0, 1.0);\n}",
          "label": "Basic Vertex Shader"
        }
      },
      "expected_result": "Valid vertex shader",
      "timeout_ms": 1000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "SHADER_002",
      "category": "Shader Compilation",
      "test_type": "Compile Fragment Shader - Basic",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@fragment\nfn main() -> @location(0) vec4<f32> {\n    return vec4<f32>(1.0, 0.0, 0.0, 1.0);\n}",
          "label": "Basic Fragment Shader"
        }
      },
      "expected_result": "Valid fragment shader",
      "timeout_ms": 1000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "SHADER_003",
      "category": "Shader Compilation",
      "test_type": "Compile Compute Shader",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "@compute @workgroup_size(64, 1, 1)\nfn main(@builtin(global_invocation_id) id: vec3<u32>) {\n    // Compute work\n}",
          "label": "Compute Shader"
        }
      },
      "expected_result": "Valid compute shader",
      "timeout_ms": 1000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "SHADER_004",
      "category": "Shader Compilation",
      "test_type": "Compile Shader with Uniforms",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "struct Uniforms {\n    mvp: mat4x4<f32>,\n}\n@group(0) @binding(0) var<uniform> uniforms: Uniforms;\n\n@vertex\nfn main(@location(0) pos: vec3<f32>) -> @builtin(position) vec4<f32> {\n    return uniforms.mvp * vec4<f32>(pos, 1.0);\n}",
          "label": "Shader with Uniforms"
        }
      },
      "expected_result": "Valid shader with uniforms",
      "timeout_ms": 1000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "SHADER_005",
      "category": "Shader Compilation",
      "test_type": "Compile Invalid Shader",
      "input": {
        "type": "ShaderModuleDesc",
        "values": {
          "code": "invalid wgsl code @#$%",
          "label": "Invalid Shader"
        }
      },
      "expected_result": "Compilation error",
      "timeout_ms": 1000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "PIPE_001",
      "category": "Pipeline Creation",
      "test_type": "Create Basic Render Pipeline",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Basic Pipeline",
          "vertexShader": "SHADER_001",
          "fragmentShader": "SHADER_002",
          "primitiveTopology": "TriangleList",
          "cullMode": "Back",
          "frontFace": "CCW"
        }
      },
      "expected_result": "Valid render pipeline",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["SHADER_001", "SHADER_002"]
    },
    {
      "id": "PIPE_002",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Vertex Buffer",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Pipeline with VB",
          "vertexShader": "SHADER_004",
          "fragmentShader": "SHADER_002",
          "vertexBuffers": [{
            "arrayStride": 12,
            "stepMode": "Vertex",
            "attributes": [{
              "format": "Float32x3",
              "offset": 0,
              "shaderLocation": 0
            }]
          }]
        }
      },
      "expected_result": "Pipeline with vertex layout",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["SHADER_004", "SHADER_002"]
    },
    {
      "id": "PIPE_003",
      "category": "Pipeline Creation",
      "test_type": "Create Compute Pipeline",
      "input": {
        "type": "ComputePipelineDesc",
        "values": {
          "label": "Compute Pipeline",
          "computeShader": "SHADER_003",
          "entryPoint": "main"
        }
      },
      "expected_result": "Valid compute pipeline",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["SHADER_003"]
    },
    {
      "id": "PIPE_004",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Depth Stencil",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Pipeline with Depth",
          "depthStencil": {
            "format": "Depth24Plus",
            "depthWriteEnabled": true,
            "depthCompare": "Less"
          }
        }
      },
      "expected_result": "Pipeline with depth test",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["SHADER_001", "SHADER_002"]
    },
    {
      "id": "PIPE_005",
      "category": "Pipeline Creation",
      "test_type": "Create Pipeline with Blending",
      "input": {
        "type": "RenderPipelineDesc",
        "values": {
          "label": "Pipeline with Blend",
          "targets": [{
            "format": "BGRA8Unorm",
            "blend": {
              "color": {
                "srcFactor": "SrcAlpha",
                "dstFactor": "OneMinusSrcAlpha",
                "operation": "Add"
              },
              "alpha": {
                "srcFactor": "One",
                "dstFactor": "One",
                "operation": "Add"
              }
            },
            "writeMask": "All"
          }]
        }
      },
      "expected_result": "Pipeline with blending",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["SHADER_001", "SHADER_002"]
    },
    {
      "id": "RENDER_001",
      "category": "RenderPass Operations",
      "test_type": "Begin Basic RenderPass",
      "input": {
        "type": "RenderPassDesc",
        "values": {
          "colorAttachments": [{
            "view": "TEX_001",
            "loadOp": "Clear",
            "storeOp": "Store",
            "clearValue": [0.0, 0.0, 0.0, 1.0]
          }],
          "depthStencilAttachment": null,
          "label": "Basic RenderPass"
        }
      },
      "expected_result": "RenderPass begun",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["CMD_001", "TEX_001"]
    },
    {
      "id": "RENDER_002",
      "category": "RenderPass Operations",
      "test_type": "Begin RenderPass with Depth",
      "input": {
        "type": "RenderPassDesc",
        "values": {
          "colorAttachments": [{
            "view": "TEX_001",
            "loadOp": "Clear",
            "storeOp": "Store",
            "clearValue": [0.0, 0.0, 0.0, 1.0]
          }],
          "depthStencilAttachment": {
            "view": "TEX_003",
            "depthLoadOp": "Clear",
            "depthStoreOp": "Store",
            "depthClearValue": 1.0
          }
        }
      },
      "expected_result": "RenderPass with depth",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["CMD_001", "TEX_001", "TEX_003"]
    },
    {
      "id": "RENDER_003",
      "category": "RenderPass Operations",
      "test_type": "End RenderPass",
      "input": {
        "type": "RenderPassEnd",
        "values": {}
      },
      "expected_result": "RenderPass ended",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["RENDER_001"]
    },
    {
      "id": "RENDER_004",
      "category": "RenderPass Operations",
      "test_type": "Set Pipeline in RenderPass",
      "input": {
        "type": "RenderPassSetPipeline",
        "values": {
          "pipeline": "PIPE_001"
        }
      },
      "expected_result": "Pipeline set",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["RENDER_001", "PIPE_001"]
    },
    {
      "id": "RENDER_005",
      "category": "RenderPass Operations",
      "test_type": "Draw Without Vertex Buffer",
      "input": {
        "type": "RenderPassDraw",
        "values": {
          "vertexCount": 3,
          "instanceCount": 1,
          "firstVertex": 0,
          "firstInstance": 0
        }
      },
      "expected_result": "Draw command encoded",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["RENDER_004"]
    },
    {
      "id": "COMPUTE_001",
      "category": "Compute Operations",
      "test_type": "Begin Compute Pass",
      "input": {
        "type": "ComputePassDesc",
        "values": {
          "label": "Test Compute Pass"
        }
      },
      "expected_result": "Compute pass begun",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["CMD_001"]
    },
    {
      "id": "COMPUTE_002",
      "category": "Compute Operations",
      "test_type": "Set Compute Pipeline",
      "input": {
        "type": "ComputePassSetPipeline",
        "values": {
          "pipeline": "PIPE_003"
        }
      },
      "expected_result": "Compute pipeline set",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["COMPUTE_001", "PIPE_003"]
    },
    {
      "id": "COMPUTE_003",
      "category": "Compute Operations",
      "test_type": "Dispatch Compute",
      "input": {
        "type": "ComputePassDispatch",
        "values": {
          "workgroupCountX": 32,
          "workgroupCountY": 1,
          "workgroupCountZ": 1
        }
      },
      "expected_result": "Compute dispatched",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["COMPUTE_002"]
    },
    {
      "id": "SYNC_001",
      "category": "Synchronization",
      "test_type": "Create Query Set - Timestamp",
      "input": {
        "type": "QuerySetDesc",
        "values": {
          "type": "Timestamp",
          "count": 16,
          "label": "Timestamp Queries"
        }
      },
      "expected_result": "Valid query set",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_002"]
    },
    {
      "id": "SWAP_001",
      "category": "SwapChain Management",
      "test_type": "Create SwapChain",
      "input": {
        "type": "SwapChainDesc",
        "values": {
          "width": 1280,
          "height": 720,
          "format": "BGRA8Unorm",
          "usage": "RenderAttachment",
          "presentMode": "Fifo"
        }
      },
      "expected_result": "Valid swapchain",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "BIND_001",
      "category": "Resource Binding",
      "test_type": "Create Bind Group Layout",
      "input": {
        "type": "BindGroupLayoutDesc",
        "values": {
          "entries": [{
            "binding": 0,
            "visibility": "Vertex",
            "buffer": {
              "type": "Uniform",
              "hasDynamicOffset": false,
              "minBindingSize": 64
            }
          }],
          "label": "Uniform BGL"
        }
      },
      "expected_result": "Valid bind group layout",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "BIND_002",
      "category": "Resource Binding",
      "test_type": "Create Bind Group",
      "input": {
        "type": "BindGroupDesc",
        "values": {
          "layout": "BIND_001",
          "entries": [{
            "binding": 0,
            "buffer": "BUF_003",
            "offset": 0,
            "size": 256
          }],
          "label": "Uniform Bind Group"
        }
      },
      "expected_result": "Valid bind group",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["BIND_001", "BUF_003"]
    },
    {
      "id": "MEM_001",
      "category": "Memory Management",
      "test_type": "Allocate Large Buffer Array",
      "input": {
        "type": "StressTest",
        "values": {
          "resourceType": "Buffer",
          "count": 1000,
          "sizeEach": 65536
        }
      },
      "expected_result": "1000 buffers allocated",
      "timeout_ms": 5000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "ERR_001",
      "category": "Error Recovery",
      "test_type": "Buffer Overflow Write",
      "input": {
        "type": "BufferWrite",
        "values": {
          "buffer_size": 512,
          "write_size": 1024
        }
      },
      "expected_result": "Error handled gracefully",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["BUF_001"]
    },
    {
      "id": "PERF_001",
      "category": "Performance",
      "test_type": "Rapid Buffer Creation",
      "input": {
        "type": "PerformanceTest",
        "values": {
          "operation": "CreateBuffer",
          "iterations": 10000,
          "bufferSize": 1024
        }
      },
      "expected_result": "10000 buffers in < 1s",
      "timeout_ms": 2000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "VAL_001",
      "category": "Validation",
      "test_type": "Invalid Buffer Usage Combination",
      "input": {
        "type": "BufferDesc",
        "values": {
          "size": 1024,
          "usage": ["MapRead", "MapWrite"],
          "mappedAtCreation": false
        }
      },
      "expected_result": "Validation error",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["DEV_001"]
    },
    {
      "id": "COMPAT_001",
      "category": "Compatibility",
      "test_type": "Check Feature Support",
      "input": {
        "type": "FeatureQuery",
        "values": {
          "features": [
            "depth-clip-control",
            "depth32float-stencil8",
            "texture-compression-bc",
            "texture-compression-etc2",
            "texture-compression-astc",
            "timestamp-query",
            "indirect-first-instance",
            "shader-f16",
            "rg11b10ufloat-renderable"
          ]
        }
      },
      "expected_result": "Feature list returned",
      "timeout_ms": 500,
      "enabled": true,
      "dependencies": ["PHYS_001"]
    },
    {
      "id": "STRESS_001",
      "category": "Stress Testing",
      "test_type": "Maximum Texture Size",
      "input": {
        "type": "TextureDesc",
        "values": {
          "dimension": "2D",
          "size": [16384, 16384, 1],
          "format": "RGBA8Unorm",
          "usage": ["TextureBinding"],
          "mipLevelCount": 1,
          "sampleCount": 1
        }
      },
      "expected_result": "16K texture or limit error",
      "timeout_ms": 5000,
      "enabled": true,
      "dependencies": ["DEV_001"]
    }
  ],
  "test_suites": {
    "quick_smoke": [
      "INST_001", "PHYS_001", "DEV_001", "QUEUE_001", "CMD_001",
      "BUF_001", "TEX_001", "SHADER_001", "SHADER_002"
    ],
    "instance_tests": [
      "INST_001", "INST_002", "INST_003", "INST_004"
    ],
    "physical_device_tests": [
      "PHYS_001", "PHYS_002", "PHYS_003", "PHYS_004", "PHYS_005"
    ],
    "device_tests": [
      "DEV_001", "DEV_002", "DEV_003"
    ],
    "queue_tests": [
      "QUEUE_001", "QUEUE_002", "QUEUE_003", "QUEUE_004", "QUEUE_005"
    ],
    "buffer_tests": [
      "BUF_001", "BUF_002", "BUF_003", "BUF_004", "BUF_005",
      "BUF_006", "BUF_007", "BUF_008", "BUF_009", "BUF_010"
    ],
    "texture_tests": [
      "TEX_001", "TEX_002", "TEX_003", "TEX_004", "TEX_005",
      "TEX_006", "TEX_007", "TEX_008", "TEX_009", "TEX_010"
    ],
    "shader_tests": [
      "SHADER_001", "SHADER_002", "SHADER_003", "SHADER_004", "SHADER_005"
    ],
    "pipeline_tests": [
      "PIPE_001", "PIPE_002", "PIPE_003", "PIPE_004", "PIPE_005"
    ],
    "render_tests": [
      "RENDER_001", "RENDER_002", "RENDER_003", "RENDER_004", "RENDER_005"
    ],
    "compute_tests": [
      "COMPUTE_001", "COMPUTE_002", "COMPUTE_003"
    ],
    "stress_tests": [
      "MEM_001", "PERF_001", "STRESS_001"
    ],
    "validation_tests": [
      "ERR_001", "VAL_001"
    ],
    "full_test": "all"
  }
}